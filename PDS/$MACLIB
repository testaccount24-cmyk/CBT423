./ ADD NAME=$$$COJRB 0104-82333-24203-2103-00016-00016-00016-JEFBRO
.*
.**********************************************************************
.*                                                                    *
.* COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
.* RESERVED EXCEPT:                                                   *
.*                                                                    *
.* PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE        *
.* OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
.* HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
.* ON THE OTHER HAND, IS APPROPRIATE.                                 *
.*                                                                    *
.*                                 BROIDO COMPUTER CONSULTING         *
.*                                 broidoj@gmail.com                  *
.*                                                                    *
.***********************************************************************
.*
./ ADD NAME=EMACRO   0104-84300-84301-1418-00026-00030-00011-ANDERSO
         MACRO
&NAME    EMACRO &PLIST,&PROCESS
.*
.*       This macro issues an ISREDIT MACRO command to identify
.* an assembler program as an edit macro
.*
         LCLC  &CP,&OPT
&CP      SETC  ''
&OPT     SETC  'PROCESS'
.LUP     AIF   ('&PROCESS' EQ '&CP').GO
         AIF   ('&PROCESS' EQ '&CP.PR').GO
         AIF   ('&PROCESS' EQ '&CP.PROC').GO
         AIF   ('&PROCESS' EQ '&CP.PROCESS').GO
         AIF   ('&OPT' EQ 'NOPROCESS').MERR
&CP      SETC  'NO'
&OPT     SETC  'NOPROCESS'
         AGO   .LUP
.*
.GO      ANOP
&NAME    ISRED 'MACRO &PLIST &OPT'
         MEXIT
.*
.MERR    ANOP
         MNOTE 8,'ILLEGAL PARAMETER.'
         MNOTE '    USE ''PROCESS'' OR ''NOPROCESS''.'
         MEND
./ ADD NAME=GCALL    0116-82225-82333-1754-00913-00272-00913-ZADSJBR
         MACRO
&NAME    GCALL &AAB=AAB,&GPARMS=GPARMS
         LCLA  &CURSOR,&IX
         LCLC  &W
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
.*
.**********************************************************************
.*                                                                    *
.*  GCALL - MACRO TO CALL GDDM ROUTINES VIA THE SYSTEM PROGRAMMER     *
.*     INTERFACE.  FORMAT IS:  GCALL MNEMONIC,PARM,PARM, ETC.  IT     *
.*     IS ASSUMED THAT YOUR APPLICATION ANCHOR BLOCK IS AT            *
.*     ADDRESS AAB (OR SPECIFY AAB=).  YOU MUST ALSO HAVE DEFINED     *
.*     A SERIES OF FULLWORDS AT LABEL GPARMS FOR THE PARMS TO BE      *
.*     STORED IN, AT LEAST ONE WORD FOR EACH POSSIBLE PARM.  YOU      *
.*     MUST ALSO DEFINE A WORD AT LABEL ADMASPP THAT CONTAINS THE     *
.*     ADDRESS OF ROUTINE ADMASP (EITHER LOADED OR LINKED).  SEE      *
.*     MANUAL SC33-0101-1 FOR EXPLANATION.  VERSION 1.00 WRITTEN      *
.*     AT A.I.G.  BY J.  BROIDO, 8/11/82.                             *
.*                                                                    *
.**********************************************************************
.*
         AIF   (N'&SYSLIST NE 0).NOT0
         MNOTE 4,'GCALL NEEDS AT LEAST ONE PARM; RESULT IS NOP.'
         MEXIT
.NOT0    ANOP
&NAME    LA    1,&GPARMS           POINT TO EXTERNAL PARM LIST.
         LA    0,&AAB              MOVE ADDRESS OF APPLICATION ...
         ST    0,0(,1)             ... ANCHOR BLOCK TO PARM LIST.
&W       SETC  '&SYSLIST(1)'
         AIF   ('&W' NE 'FSTRCE').#001
         LA    0,=X'00020000'      SPECIFY TRACE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#001    AIF   ('&W' NE 'FSEXIT').#002
         LA    0,=X'00030000'      SPECIFY SET ERROR EXIT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#002    AIF   ('&W' NE 'FSQERR').#003
         LA    0,=X'00040000'      SPECIFY QUERY LAST ERROR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#003    AIF   ('&W' NE 'SPINIT').#004
         LA    0,=X'00050000'      SPECIFY SPI SPECIAL INIT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#004    AIF   ('&W' NE 'ESLIB').#005
         LA    0,=X'08142000'      SPECIFY DEFINE LIBRARY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#005    AIF   ('&W' NE 'ESPCB').#006
         LA    0,=X'081C1000'      SPECIFY DEFINE PCB.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#006    AIF   ('&W' NE 'FSTERM').#007
         LA    0,=X'0C000000'      SPECIFY TERMINATION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#007    AIF   ('&W' NE 'FSINIT').#008
         LA    0,=X'0C000001'      SPECIFY INITIALIZATION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#008    AIF   ('&W' NE 'FSRNIT').#009
         LA    0,=X'0C000002'      SPECIFY RE-INITIALIZATION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#009    AIF   ('&W' NE 'DSOPEN').#010
         LA    0,=X'0C000200'      SPECIFY OPEN DEVICE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#010    AIF   ('&W' NE 'DSCLS').#011
         LA    0,=X'0C000201'      SPECIFY CLOSE DEVICE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#011    AIF   ('&W' NE 'DSUSE').#012
         LA    0,=X'0C000202'      SPECIFY DEVICE USAGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#012    AIF   ('&W' NE 'DSDROP').#013
         LA    0,=X'0C000203'      SPECIFY DROP DEVICE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#013    AIF   ('&W' NE 'DSQUID').#014
         LA    0,=X'0C000204'      SPECIFY QUERY UNIQUE DEVICE ID.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#014    AIF   ('&W' NE 'DSQUSE').#015
         LA    0,=X'0C000205'      SPECIFY QUERY USAGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#015    AIF   ('&W' NE 'DSQDEV').#016
         LA    0,=X'0C000206'      SPECIFY QUERY DEVICE CHRISTCS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#016    AIF   ('&W' NE 'DSRNIT').#017
         LA    0,=X'0C000207'      SPECIFY RE-INIT DEVICE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#017    AIF   ('&W' NE 'FSPCRT').#018
         LA    0,=X'0C040000'      SPECIFY PAGE CREATION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#018    AIF   ('&W' NE 'FSPSEL').#019
         LA    0,=X'0C040001'      SPECIFY PAGE SELECTION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#019    AIF   ('&W' NE 'FSPDEL').#020
         LA    0,=X'0C040002'      SPECIFY PAGE DELETION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#020    AIF   ('&W' NE 'FSPCLR').#021
         LA    0,=X'0C040003'      SPECIFY PAGE CLEAR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#021    AIF   ('&W' NE 'FSPQRY').#022
         LA    0,=X'0C040004'      SPECIFY QUERY PAGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#022    AIF   ('&W' NE 'FSQCPG').#023
         LA    0,=X'0C040005'      SPECIFY QUERY CURRENT PAGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#023    AIF   ('&W' NE 'SSQF').#024
         LA    0,=X'0C040100'      SPECIFY QUERY S SETS ON FILE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#024    AIF   ('&W' NE 'PSQSS').#025
         LA    0,=X'0C040101'      SPECIFY QUERY LOADED PS SETS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#025    AIF   ('&W' NE 'GSQNSS').#026
         LA    0,=X'0C040102'      SPECIFY QUERY NO LOADED GRA SS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#026    AIF   ('&W' NE 'GSQSS').#027
         LA    0,=X'0C040103'      SPECIFY QUERY LOADED GRPHCS SS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#027    AIF   ('&W' NE 'PSLSS').#028
         LA    0,=X'0C040200'      SPECIFY LOAD PROG SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#028    AIF   ('&W' NE 'PSLSSC').#029
         LA    0,=X'0C040201'      SPECIFY COND LOAD PROG SYM SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#029    AIF   ('&W' NE 'PSDSS').#030
         LA    0,=X'0C040202'      SPECIFY DEFINE PROG SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#030    AIF   ('&W' NE 'PSRSV').#031
         LA    0,=X'0C040203'      SPECIFY RESERVE PROG SYM SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#031    AIF   ('&W' NE 'GSLSS').#032
         LA    0,=X'0C040300'      SPECIFY LOAD GRPH SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#032    AIF   ('&W' NE 'GSDSS').#033
         LA    0,=X'0C040301'      SPECIFY DEFINE GRPH SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#033    AIF   ('&W' NE 'PSRSS').#034
         LA    0,=X'0C040400'      SPECIFY RELEASE PROG SYM SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#034    AIF   ('&W' NE 'GSRSS').#035
         LA    0,=X'0C040401'      SPECIFY RELEASE GRPH SYM SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#035    AIF   ('&W' NE 'FSQDEV').#036
         LA    0,=X'0C040500'      SPECIFY QUERY DEVICE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#036    AIF   ('&W' NE 'FSQUPG').#037
         LA    0,=X'0C040900'      SPECIFY QUERY UNIQUE PAGE ID.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#037    AIF   ('&W' NE 'SSREAD').#038
         LA    0,=X'0C040B00'      SPECIFY READ SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#038    AIF   ('&W' NE 'SSWRT').#039
         LA    0,=X'0C040B01'      SPECIFY WRITE SYMBOL SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#039    AIF   ('&W' NE 'FSALRM').#040
         LA    0,=X'0C080000'      SPECIFY SOUND ALARM.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#040    AIF   ('&W' NE 'ASFCUR').#041
         LA    0,=X'0C080100'      SPECIFY MOVE CURSOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#041    AIF   ('&W' NE 'ASDFLT').#042
         LA    0,=X'0C080200'      SPECIFY SET DEFAULT FLD ATTRS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#042    AIF   ('&W' NE 'ASDTRN').#043
         LA    0,=X'0C080300'      SPECIFY DEFINE XLATE TABLE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#043    AIF   ('&W' NE 'ASFCLR').#044
         LA    0,=X'0C080400'      SPECIFY CLEAR ALPHA FIELDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#044    AIF   ('&W' NE 'ASFTYP').#045
         LA    0,=X'0C080500'      SPECIFY SET FIELD TYPE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#045    AIF   ('&W' NE 'ASFINT').#046
         LA    0,=X'0C080501'      SPECIFY SET FIELD INTENSITY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#046    AIF   ('&W' NE 'ASFCOL').#047
         LA    0,=X'0C080502'      SPECIFY SET FIELD COLOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#047    AIF   ('&W' NE 'ASFPSS').#048
         LA    0,=X'0C080503'      SPECIFY SET FIELD PRIMARY SS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#048    AIF   ('&W' NE 'ASFHLT').#049
         LA    0,=X'0C080504'      SPECIFY SET FIELD HILITE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#049    AIF   ('&W' NE 'ASFEND').#050
         LA    0,=X'0C080505'      SPECIFY SET END FLD ATTRIBUTE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#050    AIF   ('&W' NE 'ASFOUT').#051
         LA    0,=X'0C080506'      SPECIFY SET FIELD O/P NULLS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#051    AIF   ('&W' NE 'ASFIN').#052
         LA    0,=X'0C080507'      SPECIFY SET FIELD I/P BLANKS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#052    AIF   ('&W' NE 'ASFTRN').#053
         LA    0,=X'0C080508'      SPECIFY SET FLD XLATE TABLE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#053    AIF   ('&W' NE 'ASCHLT').#054
         LA    0,=X'0C080600'      SPECIFY SET CHARACTER HILITES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#054    AIF   ('&W' NE 'ASCCOL').#055
         LA    0,=X'0C080601'      SPECIFY SET CHARACTER COLORS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#055    AIF   ('&W' NE 'ASCSS').#056
         LA    0,=X'0C080602'      SPECIFY SET CHAR SYMBOL SETS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#056    AIF   ('&W' NE 'ASCPUT').#057
         LA    0,=X'0C080603'      SPECIFY SET CHARACTER CODES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#057    AIF   ('&W' NE 'ASDFLD').#058
         LA    0,=X'0C080700'      SPECIFY DEFINE ALPHA FIELD.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#058    AIF   ('&W' NE 'ASRFMT').#059
         LA    0,=X'0C080800'      SPECIFY REDEFINE ALPHA FIELDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#059    AIF   ('&W' NE 'ASDFMT').#060
         LA    0,=X'0C080801'      SPECIFY DEFINE ALPHA FIELDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#060    AIF   ('&W' NE 'ASRATT').#061
         LA    0,=X'0C080802'      SPECIFY REDEFINE FIELD ATTR.S.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#061    AIF   ('&W' NE 'ASQHLT').#062
         LA    0,=X'0C080900'      SPECIFY QUERY CHAR HILITES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#062    AIF   ('&W' NE 'ASQCOL').#063
         LA    0,=X'0C080901'      SPECIFY QUERY CHARACTER COLORS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#063    AIF   ('&W' NE 'ASQSS').#064
         LA    0,=X'0C080902'      SPECIFY QUERY CHAR SYMBOL SETS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#064    AIF   ('&W' NE 'ASCGET').#065
         LA    0,=X'0C080903'      SPECIFY QUERY CHARACTER CODES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#065    AIF   ('&W' NE 'ASQFLD').#066
         LA    0,=X'0C080A00'      SPECIFY QUERY FLD ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#066    AIF   ('&W' NE 'ASQMOD').#067
         LA    0,=X'0C080B00'      SPECIFY QUERY MODIFIED FIELDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#067    AIF   ('&W' NE 'FSREST').#068
         LA    0,=X'0C080C00'      SPECIFY RESTORE SCREEN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#068    AIF   ('&W' NE 'ASMODE').#069
         LA    0,=X'0C080D00'      SPECIFY SET REPLY MODE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#069    AIF   ('&W' NE 'ASQMAX').#070
         LA    0,=X'0C080E00'      SPECIFY QUERY NO. OF FIELDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#070    AIF   ('&W' NE 'ASQCUR').#071
         LA    0,=X'0C080F00'      SPECIFY QUERY CURSOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#071    AIF   ('&W' NE 'ASFMOD').#072
         LA    0,=X'0C081100'      SPECIFY MODIFY FIELD.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#072    AIF   ('&W' NE 'ASTYPE').#073
         LA    0,=X'0C081300'      SPECIFY SET TERMINAL TYPE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#073    AIF   ('&W' NE 'ASGPUT').#074
         LA    0,=X'0C081503'      SPECIFY SET DUAL-CHARACTERS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#074    AIF   ('&W' NE 'ASGGET').#075
         LA    0,=X'0C081603'      SPECIFY QUERY DUAL-CHARACTERS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#075    AIF   ('&W' NE 'GSFLD').#076
         LA    0,=X'0C0C0000'      SPECIFY GRAPHICS FIELD.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#076    AIF   ('&W' NE 'GSPS').#077
         LA    0,=X'0C0C0001'      SPECIFY PICTURE SPACE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#077    AIF   ('&W' NE 'GSWIN').#078
         LA    0,=X'0C0C0002'      SPECIFY  SPECIFY WINDOW.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#078    AIF   ('&W' NE 'GSVIEW').#079
         LA    0,=X'0C0C0003'      SPECIFY  SPECIFY VIEWPORT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#079    AIF   ('&W' NE 'GSQPS').#080
         LA    0,=X'0C0C0004'      SPECIFY QUERY PICTURE SPACE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#080    AIF   ('&W' NE 'GSQVIE').#081
         LA    0,=X'0C0C0005'      SPECIFY QUERY VIEWPORT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#081    AIF   ('&W' NE 'GSQWIN').#082
         LA    0,=X'0C0C0006'      SPECIFY QUERY WINDOW.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#082    AIF   ('&W' NE 'GSQMAX').#083
         LA    0,=X'0C0C0100'      SPECIFY QUERY SEGMENT RANGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#083    AIF   ('&W' NE 'GSQCUR').#084
         LA    0,=X'0C0C0101'      SPECIFY QUERY CURSOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#084    AIF   ('&W' NE 'GSQCEL').#085
         LA    0,=X'0C0C0202'      SPECIFY QUERY CELL SIZE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#085    AIF   ('&W' NE 'GSCLP').#086
         LA    0,=X'0C0C0203'      SPECIFY  SPECIFY CLIPPING.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#086    AIF   ('&W' NE 'GSQCLP').#087
         LA    0,=X'0C0C0204'      SPECIFY QUERY CLIPPING.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#087    AIF   ('&W' NE 'GSSEG').#088
         LA    0,=X'0C0C0300'      SPECIFY CREATE SEGMENT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#088    AIF   ('&W' NE 'GSSCLS').#089
         LA    0,=X'0C0C0301'      SPECIFY CLOSE SEGMENT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#089    AIF   ('&W' NE 'GSSDEL').#090
         LA    0,=X'0C0C0302'      SPECIFY DELETE SEGMENT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#090    AIF   ('&W' NE 'GSCLR').#091
         LA    0,=X'0C0C0303'      SPECIFY CLEAR GRAPHICS FIELD.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#091    AIF   ('&W' NE 'GSMOVE').#092
         LA    0,=X'0C0C0400'      SPECIFY MOVE TO.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#092    AIF   ('&W' NE 'GSLINE').#093
         LA    0,=X'0C0C0401'      SPECIFY LINE TO.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#093    AIF   ('&W' NE 'GSPLNE').#094
         LA    0,=X'0C0C0402'      SPECIFY POLYLINE TO.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#094    AIF   ('&W' NE 'GSMARK').#095
         LA    0,=X'0C0C0406'      SPECIFY MARKER AT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#095    AIF   ('&W' NE 'GSMRKS').#096
         LA    0,=X'0C0C0407'      SPECIFY POLY MARKER AT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#096    AIF   ('&W' NE 'GSAREA').#097
         LA    0,=X'0C0C0408'      SPECIFY BEGIN AREA.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#097    AIF   ('&W' NE 'GSENDA').#098
         LA    0,=X'0C0C0409'      SPECIFY END AREA.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#098    AIF   ('&W' NE 'GSVECM').#099
         LA    0,=X'0C0C040A'      SPECIFY VECTOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#099    AIF   ('&W' NE 'GSCHAR').#100
         LA    0,=X'0C0C0500'      SPECIFY CHARACTER STRING AT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#100    AIF   ('&W' NE 'GSCHAP').#101
         LA    0,=X'0C0C0501'      SPECIFY CHARACTER STRING.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#101    AIF   ('&W' NE 'GSARC').#102
         LA    0,=X'0C0C0600'      SPECIFY ARC.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#102    AIF   ('&W' NE 'GSELPS').#103
         LA    0,=X'0C0C0601'      SPECIFY ELLIPSE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#103    AIF   ('&W' NE 'GSPFLT').#104
         LA    0,=X'0C0C0602'      SPECIFY FILLET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#104    AIF   ('&W' NE 'GSQCP').#105
         LA    0,=X'0C0C0700'      SPECIFY QUERY CURRENT POSN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#105    AIF   ('&W' NE 'GSCOL').#106
         LA    0,=X'0C0C0701'      SPECIFY SET COLOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#106    AIF   ('&W' NE 'GSMIX').#107
         LA    0,=X'0C0C0702'      SPECIFY SET MIX MODE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#107    AIF   ('&W' NE 'GSLT').#108
         LA    0,=X'0C0C0703'      SPECIFY SET LINE TYPE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#108    AIF   ('&W' NE 'GSLW').#109
         LA    0,=X'0C0C0704'      SPECIFY SET LINE WIDTH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#109    AIF   ('&W' NE 'GSCM').#110
         LA    0,=X'0C0C0705'      SPECIFY SET CHARACTER MODE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#110    AIF   ('&W' NE 'GSCS').#111
         LA    0,=X'0C0C0706'      SPECIFY SET CHARACTER SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#111    AIF   ('&W' NE 'GSCB').#112
         LA    0,=X'0C0C0707'      SPECIFY SET CHARACTER BOX.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#112    AIF   ('&W' NE 'GSCA').#113
         LA    0,=X'0C0C0708'      SPECIFY SET CHARACTER ANGLE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#113    AIF   ('&W' NE 'GSCD').#114
         LA    0,=X'0C0C0709'      SPECIFY SET CHARACTER DIRCTN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#114    AIF   ('&W' NE 'GSPAT').#115
         LA    0,=X'0C0C070A'      SPECIFY SET PATTERN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#115    AIF   ('&W' NE 'GSMS').#116
         LA    0,=X'0C0C070B'      SPECIFY SET MARKER SYMBOL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#116    AIF   ('&W' NE 'GSCH').#117
         LA    0,=X'0C0C070C'      SPECIFY SET CHARACTER SHEAR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#117    AIF   ('&W' NE 'GSQCOL').#118
         LA    0,=X'0C0C0711'      SPECIFY QUERY COLOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#118    AIF   ('&W' NE 'GSQMIX').#119
         LA    0,=X'0C0C0712'      SPECIFY QUERY MIX MODE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#119    AIF   ('&W' NE 'GSQLT').#120
         LA    0,=X'0C0C0713'      SPECIFY QUERY LINE TYPE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#120    AIF   ('&W' NE 'GSQLW').#121
         LA    0,=X'0C0C0714'      SPECIFY QUERY LINE WIDTH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#121    AIF   ('&W' NE 'GSQCM').#122
         LA    0,=X'0C0C0715'      SPECIFY QUERY CHARACTER MODE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#122    AIF   ('&W' NE 'GSQCS').#123
         LA    0,=X'0C0C0716'      SPECIFY QUERY CHARACTER SET.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#123    AIF   ('&W' NE 'GSQCB').#124
         LA    0,=X'0C0C0717'      SPECIFY QUERY CHARACTER BOX.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#124    AIF   ('&W' NE 'GSQCA').#125
         LA    0,=X'0C0C0718'      SPECIFY QUERY CHARACTER ANG.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#125    AIF   ('&W' NE 'GSQCD').#126
         LA    0,=X'0C0C0719'      SPECIFY QUERY CHARACTER DIRN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#126    AIF   ('&W' NE 'GSQPAT').#127
         LA    0,=X'0C0C071A'      SPECIFY QUERY PATTERN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#127    AIF   ('&W' NE 'GSQMS').#128
         LA    0,=X'0C0C071B'      SPECIFY QUERY MARKER SYMBOL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#128    AIF   ('&W' NE 'GSQCH').#129
         LA    0,=X'0C0C071C'      SPECIFY QUERY CHARACTER SHEAR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#129    AIF   ('&W' NE 'GSPUT').#130
         LA    0,=X'0C0C0900'      SPECIFY INCLUDE GDF.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#130    AIF   ('&W' NE 'GSIMG').#131
         LA    0,=X'0C0C0A00'      SPECIFY LIMITED IMAGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#131    AIF   ('&W' NE 'GSGETS').#132
         LA    0,=X'0C0C0B00'      SPECIFY RETRIEVE GDF.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#132    AIF   ('&W' NE 'GSGETE').#133
         LA    0,=X'0C0C0B01'      SPECIFY END GDF RETRIEVAL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#133    AIF   ('&W' NE 'GSGET').#134
         LA    0,=X'0C0C0B02'      SPECIFY GET GDF BUFFER.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#134    AIF   ('&W' NE 'ASREAD').#135
         LA    0,=X'0C100000'      SPECIFY READ.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#135    AIF   ('&W' NE 'FSFRCE').#136
         LA    0,=X'0C100001'      SPECIFY FORCE OUTPUT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#136    AIF   ('&W' NE 'FSCHEK').#137
         LA    0,=X'0C100002'      SPECIFY PREPARE PS FOR OUTPUT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#137    AIF   ('&W' NE 'FSSAVE').#138
         LA    0,=X'0C100004'      SPECIFY SAVE SCREEN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#138    AIF   ('&W' NE 'FSSHOW').#139
         LA    0,=X'0C100005'      SPECIFY SHOW SCREEN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#139    AIF   ('&W' NE 'FSOPEN').#140
         LA    0,=X'0C180000'      SPECIFY OPEN PRINTER DESTINTN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#140    AIF   ('&W' NE 'FSCOPY').#141
         LA    0,=X'0C180001'      SPECIFY PAGE COPY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#141    AIF   ('&W' NE 'GSCOPY').#142
         LA    0,=X'0C180002'      SPECIFY GRAPHICS COPY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#142    AIF   ('&W' NE 'FSLOG').#143
         LA    0,=X'0C180003'      SPECIFY LINE-BY-LINE OUTPUT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#143    AIF   ('&W' NE 'FSCLS').#144
         LA    0,=X'0C180004'      SPECIFY CLOSE PRINTER DESTINTN.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#144    AIF   ('&W' NE 'CHTERM').#145
         LA    0,=X'10000100'      SPECIFY TERMINATE BUS. GRAPHIC.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#145    AIF   ('&W' NE 'CHRNIT').#146
         LA    0,=X'10010100'      SPECIFY REINITIALIZE BUS GRAPH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#146    AIF   ('&W' NE 'CHSET').#147
         LA    0,=X'10020101'      SPECIFY SET OPTIONS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#147    AIF   ('&W' NE 'CHKEY').#148
         LA    0,=X'10020201'      SPECIFY CHART KEYS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#148    AIF   ('&W' NE 'CHHEAD').#149
         LA    0,=X'10020202'      SPECIFY CHART HEADING.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#149    AIF   ('&W' NE 'CHMARK').#150
         LA    0,=X'10020301'      SPECIFY MARKER INFORMATION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#150    AIF   ('&W' NE 'CHLT').#151
         LA    0,=X'10020302'      SPECIFY LINETYPES TO USE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#151    AIF   ('&W' NE 'CHCOL').#152
         LA    0,=X'10020303'      SPECIFY COLORS TO USE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#152    AIF   ('&W' NE 'CHPAT').#153
         LA    0,=X'10020304'      SPECIFY SHADING PATTERNS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#153    AIF   ('&W' NE 'CHXSET').#154
         LA    0,=X'10020401'      SPECIFY X AXIS SELECTION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#154    AIF   ('&W' NE 'CHYSET').#155
         LA    0,=X'10020402'      SPECIFY Y AXIS SELECTION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#155    AIF   ('&W' NE 'CHXTTL').#156
         LA    0,=X'10020501'      SPECIFY X AXIS TITLE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#156    AIF   ('&W' NE 'CHYTTL').#157
         LA    0,=X'10020502'      SPECIFY Y AXIS TITLE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#157    AIF   ('&W' NE 'CHXLAB').#158
         LA    0,=X'10020503'      SPECIFY X AXIS LABEL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#158    AIF   ('&W' NE 'CHYLAB').#159
         LA    0,=X'10020504'      SPECIFY Y AXIS LABEL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#159    AIF   ('&W' NE 'CHXSCL').#160
         LA    0,=X'10020607'      SPECIFY SET X SELECT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#160    AIF   ('&W' NE 'CHYSCL').#161
         LA    0,=X'10020608'      SPECIFY SET Y SEL.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#161    AIF   ('&W' NE 'CHXMTH').#162
         LA    0,=X'10020609'      SPECIFY SET X AXIS MONTH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#162    AIF   ('&W' NE 'CHYMTH').#163
         LA    0,=X'1002060A'      SPECIFY SET Y AXIS MONTH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#163    AIF   ('&W' NE 'CHXDAY').#164
         LA    0,=X'1002060B'      SPECIFY SET X AXIS DAY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#164    AIF   ('&W' NE 'CHYDAY').#165
         LA    0,=X'1002060C'      SPECIFY SET Y AXIS DAY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#165    AIF   ('&W' NE 'CHNUM').#166
         LA    0,=X'1002060F'      SPECIFY SET # OF COMPONENTS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#166    AIF   ('&W' NE 'CHGAP').#167
         LA    0,=X'10020610'      SPECIFY SET BAR GAP WIDTH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#167    AIF   ('&W' NE 'CHGGAP').#168
         LA    0,=X'10020611'      SPECIFY SET BAR GROUP GAP.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#168    AIF   ('&W' NE 'CHHMAR').#169
         LA    0,=X'10020612'      SPECIFY SET HORZIONTAL MARGINS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#169    AIF   ('&W' NE 'CHVMAR').#170
         LA    0,=X'10020613'      SPECIFY SET VERTICLE MARGINS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#170    AIF   ('&W' NE 'CHPIER').#171
         LA    0,=X'10020614'      SPECIFY SET PIE REDUCTION.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#171    AIF   ('&W' NE 'CHCGRD').#172
         LA    0,=X'10020615'      SPECIFY SET CHARACTER SIZE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#172    AIF   ('&W' NE 'CHVCHR').#173
         LA    0,=X'10020616'      SPECIFY # CHARS ON BAR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#173    AIF   ('&W' NE 'CHFINE').#174
         LA    0,=X'1002061A'      SPECIFY # CURVE-FIT LINES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#174    AIF   ('&W' NE 'CHAATT').#175
         LA    0,=X'10020701'      SPECIFY SET AXIS ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#175    AIF   ('&W' NE 'CHGATT').#176
         LA    0,=X'10020702'      SPECIFY SET GRID ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#176    AIF   ('&W' NE 'CHKEYP').#177
         LA    0,=X'10020801'      SPECIFY SET KEY POSITIONING.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#177    AIF   ('&W' NE 'CHHATT').#178
         LA    0,=X'10020901'      SPECIFY SET HEADING ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#178    AIF   ('&W' NE 'CHTATT').#179
         LA    0,=X'10020902'      SPECIFY SET TITLE ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#179    AIF   ('&W' NE 'CHLATT').#180
         LA    0,=X'10020903'      SPECIFY SET LABEL ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#180    AIF   ('&W' NE 'CHKATT').#181
         LA    0,=X'10020905'      SPECIFY SET KEY ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#181    AIF   ('&W' NE 'CHVATT').#182
         LA    0,=X'10020906'      SPECIFY SET VALUE ATTRIBUTES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#182    AIF   ('&W' NE 'CHAREA').#183
         LA    0,=X'10020A02'      SPECIFY SET AREA      BOUNDS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#183    AIF   ('&W' NE 'CHXRNG').#184
         LA    0,=X'100A0601'      SPECIFY SET X AXIS RANGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#184    AIF   ('&W' NE 'CHYRNG').#185
         LA    0,=X'100A0602'      SPECIFY SET Y AXIS RANGE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#185    AIF   ('&W' NE 'CHXINT').#186
         LA    0,=X'100A0603'      SPECIFY SET X INTERCEPT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#186    AIF   ('&W' NE 'CHYINT').#187
         LA    0,=X'100A0604'      SPECIFY SET Y INTERCEPT.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#187    AIF   ('&W' NE 'CHXTIC').#188
         LA    0,=X'100A0605'      SPECIFY SET X TIC MARK.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#188    AIF   ('&W' NE 'CHYTIC').#189
         LA    0,=X'100A0606'      SPECIFY SET Y TICK MARK.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#189    AIF   ('&W' NE 'CHKOFF').#190
         LA    0,=X'100A0618'      SPECIFY SET LEGEND OFFSETS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#190    AIF   ('&W' NE 'CHKMAX').#191
         LA    0,=X'100A0619'      SPECIFY SET LEGEND DIMENSIONS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#191    AIF   ('&W' NE 'CHNOFF').#192
         LA    0,=X'100B0617'      SPECIFY SET ANNOTATION OFFSETS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#192    AIF   ('&W' NE 'CHNATT').#193
         LA    0,=X'100B0904'      SPECIFY SET ANNOTATION ATTRBTS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#193    AIF   ('&W' NE 'CHDATT').#194
         LA    0,=X'100B0A01'      SPECIFY SET DATUM LINE ATTRBTS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#194    AIF   ('&W' NE 'CHBATT').#195
         LA    0,=X'100B0A03'      SPECIFY SET CHART BOX      ATTRBTS.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#195    AIF   ('&W' NE 'CHBAR').#196
         LA    0,=X'100D0A01'      SPECIFY PLOT A BAR CHART.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#196    AIF   ('&W' NE 'CHHIST').#197
         LA    0,=X'100D0A02'      SPECIFY PLOT A HISTOGRAM.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#197    AIF   ('&W' NE 'CHPLOT').#198
         LA    0,=X'100D0A03'      SPECIFY PLOT A LINE GRAPH.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#198    AIF   ('&W' NE 'CHSURF').#199
         LA    0,=X'100D0A04'      SPECIFY PLOT A SURFACE CHART.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#199    AIF   ('&W' NE 'CHVENN').#200
         LA    0,=X'100D0A05'      SPECIFY MAKE A VENN DIAGRAM.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#200    AIF   ('&W' NE 'CHPIE').#201
         LA    0,=X'100D0A06'      SPECIFY CONSTRUCT A PIE CHART.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#201    AIF   ('&W' NE 'CHXDTM').#202
         LA    0,=X'100E060D'      SPECIFY SET X AXIS DATUM LINE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#202    AIF   ('&W' NE 'CHYDTM').#203
         LA    0,=X'100E060E'      SPECIFY SET Y AXIS DATUM LINE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#203    AIF   ('&W' NE 'CHXSEL').#204
         LA    0,=X'100F0801'      SPECIFY CHANGE X AXIS SELECTED.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#204    AIF   ('&W' NE 'CHYSEL').#205
         LA    0,=X'100F0802'      SPECIFY CHANGE Y AXIS SELECTED.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#205    AIF   ('&W' NE 'CHSTRT').#206
         LA    0,=X'10110100'      SPECIFY RESUME STATE ONE.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#206    AIF   ('&W' NE 'CHNOTE').#207
         LA    0,=X'10130100'      SPECIFY ANNOTATE CHART.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#207    AIF   ('&W' NE 'CHDRAX').#208
         LA    0,=X'10140100'      SPECIFY REDRAW SELECTED AXES.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#208    AIF   ('&W' NE 'CHART').#209
         LA    0,=X'14000000'      SPECIFY CHART UTILITY.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#209    AIF   ('&W' NE 'ISSE').#210
         LA    0,=X'18000000'      SPECIFY INVOKE SYMBOL EDITOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.#210    AIF   ('&W' NE 'VSSE').BADCODE
         LA    0,=X'20000000'      SPECIFY INVOKE VECTOR EDITOR.
         ST    0,4(,1)             SAVE ITS POINTER IN PARM LIST.
         AGO   .PP
.BADCODE MNOTE 8,'&W IS NOT A VALID FUNCTION CODE.'
         MEXIT
.PP      ANOP
&CURSOR  SETA  4                   SET OUTPUT PARM CURSOR TO 4.
&IX      SETA  1                   SET INPUT PARM INDEX TO 1.
.LOOP    ANOP
&IX      SETA  &IX+1               BUMP PARM INDEX.
         AIF   (&IX GT N'&SYSLIST).MRKLAST
&CURSOR  SETA  &CURSOR+4           BUMP OUTPUT CURSOR.
         AIF   ('&SYSLIST(&IX)' NE '').NOTNULL
         LA    0,=F'0'             INDICATE NULL PARAMETER AND ...
         AGO   .STORE
.NOTNULL AIF   ('&SYSLIST(&IX)(1,1)' NE '(').NOTREG
&W       SETC  '&SYSLIST(&IX)'
&W       SETC  '&W'(2,K'&W-1)
         LR    0,&W                LOAD PARAMETER AND ...
         AGO   .STORE
.NOTREG  LA    0,&SYSLIST(&IX)     LOAD PARAMETER AND ...
.STORE   ST    0,&CURSOR.(,1)      ... STORE PARAMETER IN LIST.
         AGO   .LOOP
.MRKLAST OI    &CURSOR.(1),X'80'   MARK END OF VARIABLE PARM LIST.
         L     15,ADMASPP          POINT TO GDDM SPI MODULE.
         BALR  14,15               BRANCH TO GDDM.
         MEND
./ ADD NAME=HOME     0105-80094-82335-0931-00024-00007-00019-ZADSJBR
         MACRO
&N       HOME
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
&N       LA    0,4                     LOAD LENGTH.
         LA    1,=X'F1114040'          POINT TO HOME SEQUENCE.
         ICM   1,8,=X'03'              SET FULLSCR OPTION.
         SVC   93                      INVOKE TPUT.
         MEND
./ ADD NAME=IKJERASE 0103-79066-81120-1639-00007-00007-00007-BROIDO
         MACRO
&N       IKJERASE ,                    IDENTICAL TO THE ERASE MACRO.
&N       LA    0,9                     LOAD LENGTH.
         LA    1,=X'F11140403C40400013'
         ICM   1,8,=X'03'              SET FULLSCR OPTION.
         SVC   93                      INVOKE TPUT.
         MEND
./ ADD NAME=ISRED    0104-84304-84306-1149-00072-00066-00008-ANDERSO
         MACRO
&NAME    ISRED &CMD,&LEN
         LCLC  &T1,&T2,&CMDN,&LENN
         LCLB  &R01,&R02,&DLEN,&LN1B
&CMDN    SETC  'CMD&SYSNDX'
&LENN    SETC  'LEN&SYSNDX'
&T1      SETC  '&CMD'(1,1)         TEST FOR LITERAL OR CONSTANT
&DLEN    SETB  (K'&LEN EQ 0)
&R01     SETB  0
&R02     SETB  0
&NAME    B     GO&SYSNDX           BRANCH AROUND CONSTANTS
         AIF   (D'ISREDLIT).SKIP1  GENERATE 'ISREDIT' ONLY IF NEEDED
ISREDLIT DC    CL8'ISREDIT'
.SKIP1   ANOP
         AIF   ('&T1' EQ ''''  AND  &DLEN).CENTLEN
         AIF   ('&T1' EQ '''').DCCMD
         AIF   ('&T1' EQ '(').REGCMD
&CMDN    SETC  '&CMD'
         AGO   .DOLENG
.DCCMD   ANOP
CMD&SYSNDX DC  C&CMD
         AGO   .DOLENG
.REGCMD  ANOP
CMD&SYSNDX DS  F
&R01     SETB  1
.DOLENG  ANOP
         AIF   (K'&LEN EQ 0).DEFLEN
&T2      SETC  '&LEN'(1,1)
         AIF   ('&T2' EQ '''').DCLEN
         AIF   ('&T2' EQ '(').REGLEN
&LENN    SETC  '&LEN'              LENGTH FIELD FROM SPECIFIED FIELD
         AGO   .DOCODE
.REGLEN  ANOP
LEN&SYSNDX DS  F
&R02     SETB  1
         AGO   .DOCODE
.DCLEN   ANOP
LEN&SYSNDX DC  F&LEN               LENGTH FROM LITERAL
         AGO   .DOCODE
.DEFLEN  ANOP
&GLEN    SETA  L'&CMD
LEN&SYSNDX DC  F'&GLEN'            GENERATE LENGTH FROM ATTRIBUTE
&LN1B    SETB  (&GLEN EQ 1)        TEST FOR DEFAULT ATTRIBUTE
         AGO   .DOCODE
.CENTLEN ANOP
         AIF   (D'EDMLENG0).SKIP2  GENERATE LENGTH FIELD = 0 IF NEEDED
EDMLENG0 DC    F'0'
.SKIP2   ANOP
LEN&SYSNDX EQU EDMLENG0
CMD&SYSNDX DC  C'¢'                GENERATE COMMAND DELIMITED BY '¢'
         DC    C&CMD
         DC    C'¢'
         DS    0H
.DOCODE  ANOP
GO&SYSNDX DS   0H
         AIF   (NOT &LN1B).NOLENG
&L       SETC  'L''&CMD'
         LA    15,&L               USE LENGTH ATTRIBUTE AT ASSEMBLY
         ST    15,LEN&SYSNDX           TIME.  MAY BE MORE ACCURATE
.NOLENG  ANOP
         AIF   (NOT (&R01)).NOSAV1
&CK      SETA  K'&CMD-2
&CSTR    SETC  '&CMD'(2,&CK)
         ST    &CSTR,CMD&SYSNDX    STORE COMMAND FROM REGISTER
.NOSAV1  ANOP
         AIF   (NOT (&R02)).NOSAV2
&CK      SETA  K'&LEN-2
&CSTR    SETC  '&LEN'(2,&CK)
         ST    &CSTR,LEN&SYSNDX    STORE LENGTH FROM REGISTER
.NOSAV2  ANOP
         CALL  ISPLINK,(ISREDLIT,&LENN,&CMDN),VL
         MEND
./ ADD NAME=JTPUT,SSI=38111094
         MACRO
&NAME    TPUT  &BFF,&SIZE,&EDIT,&WAIT,&HOLD,&BRKI,&PRTY,&TJID=,        *
               &TJIDLOC=,&ASID=,&ASIDLOC=,&USERIDL=,&MF=       @G76XRYU
.* A000000-999999                                              @G76XR00
.* A770501,896051,896076,896158,896167,960000                  @OZ43223
.* C896050,896054,896063-896064,896075,896089,896157,896159,   @OZ43223
.* C896166,896168                                              @OZ43223
.* D896058-896062,896083-896087                                @OZ43223
.* C204500,206000-207000,216500,218000-218500,D219000          @OZ44359
.*
         LCLA  &FLAGON,&FLAGOFF,&FLAGS2,&OPT,&NTJ,&RET         @G76XRYU
         LCLB  &E,&W,&H,&B,&P,&OLDBUFF                         @G76XRYU
         LCLC  &TSID,&TSIDLOC,&PARM,&NDX,&ID                   @G76XRYU
&NDX     SETC  '&SYSNDX'                                       @G76XRYU
         AIF   (N'&SYSLIST LE 7).POSOPOK .IF TOO MANY OPERANDS @G76XRYU
         MNOTE 12,'IHB300 EXCESSIVE POSITIONAL OPERANDS SPECIFIED'
         MEXIT                                                 @G76XRYU
.POSOPOK ANOP                         ..POSITIONAL OPERANDS OK @G76XRYU
         AIF   ('&MF' EQ '').FORMOK     NON-EXTENDED FORM OK   @G76XRYU
         AIF   ('&MF' EQ 'I' OR '&MF' EQ 'L' OR ('&MF(1)' EQ 'E' AND N'*
               &MF EQ 2)).FORMOK     ...FORMAT OPERANDS OK...  @G76XRYU
         MNOTE 12,'IHB303 INVALID OPERAND MF=&MF '             @G76XRYU
         MEXIT                                                 @G76XRYU
.FORMOK  ANOP                                                  @G76XRYU
         AIF   (('&BFF' EQ '' OR '&SIZE' EQ '') AND '&MF' EQ '').ERROR1
         AIF   ('&SIZE' EQ '' AND '&MF' EQ 'I').SIZERR         @G76XRYU
         AIF   ('&BFF' NE '' OR '&MF' NE 'I').BFFEXOK          @G76XRYU
         MNOTE 12,'IHB300 BUFFER ADDRESS NOT SPECIFIED'        @G76XRYU
         MEXIT                                                 @G76XRYU
.BFFEXOK ANOP              ...BUFFER ADDR GIVEN W/ MF=I,E,L    @G76XRYU
&ID      SETC  '0'                                             @G76XRYU
&FLAGOFF SETA  127                   ...SET FOR AND OPERATION  @G76XRYU
&NTJ     SETA  N'&TJID+N'&TJIDLOC+N'&ASID+N'&ASIDLOC+N'&USERIDL
         AIF   (&NTJ GT 1).ERROR2
         AIF   (&NTJ EQ 0).KEEPID    ..IF ANY ID SPECIFIED ..  @G76XRYU
&FLAGOFF SETA  &FLAGOFF-64            ..INSURE USER ID FLAG    @G76XRYU
.*                                      TURNED OFF FOR EX FORM @G76XRYU
.KEEPID  ANOP                        ..ELSE RETAIN PRESENT SET @G76XRYU
&TSID    SETC  '&ASID&TJID'
&TSIDLOC SETC  '&ASIDLOC&TJIDLOC'
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
&PARM    SETC  '&EDIT'
         AIF   ('&USERIDL' EQ '').CKPARM
&OPT     SETA  X'40'                    DENOTE USERID SPECIFIED
&FLAGON  SETA  &FLAGON+64               TO OR USER ID FLAG     @G76XRYU
.CKPARM  ANOP
&RET     SETA  &RET+1
         AIF   ('&PARM' EQ '').RET           NULL, TRY NEXT
         AIF   ('&PARM' EQ 'EDIT').EDI       SET EDIT
         AIF   ('&PARM' EQ 'ASIS').ASI       SET ASIS
         AIF   ('&PARM' EQ 'CONTROL').CON    SET CONTROL
         AIF   ('&PARM' EQ 'FULLSCR').FULLS  SET FULL SCREEN    SA60002
         AIF   ('&PARM' EQ 'NOEDIT').NOED    SET NO EDIT MODE  @G76XRYU
         AIF   ('&PARM' EQ 'WAIT').WAI       SET WAIT
         AIF   ('&PARM' EQ 'NOWAIT').NOW     SET NOWAIT
         AIF   ('&PARM' EQ 'HOLD').HOL       SET HOLD
         AIF   ('&PARM' EQ 'NOHOLD').NOH     SET NOHOLD
         AIF   ('&PARM' EQ 'NOBREAK').NOB    SET NOBREAK
         AIF   ('&PARM' EQ 'BREAKIN').BRE    SET BREAKIN
         AIF   ('&PARM' EQ 'HIGHP').HPR      SET HIGHP
         AIF   ('&PARM' EQ 'LOWP').LPR       SET LOWP
         AGO   .ERROR3
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-3               EDIT FOR EXECUTE FORM  @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&FLAGOFF SETA  &FLAGOFF-2               1ST BIT OF ASIS FOR EX @G76XRYU
&FLAGON  SETA  &FLAGON+1                2ND BIT OF ASIS FOR EX @G76XRYU
&OPT     SETA  &OPT+1                   SET EDIT=ASIS
         AGO   .EDDONE                                         @G76XRYU
.CON     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+2                   SET EDIT=CONTROL
&FLAGOFF SETA  &FLAGOFF-1               1ST BIT OF CNTR FOR EX @G76XRYU
&FLAGON  SETA  &FLAGON+2                2ND BIT OF CNTR FOR EX @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.FULLS   ANOP                                                   SA60002
         AIF   (&E).ERROR2              DUP OPTION              SA60002
&E       SETB  1                        EDIT OPTION SPECIFIED   SA60002
&OPT     SETA  &OPT+3                   CNTL+ASIS FOR FULLSCR   SA60002
&FLAGON  SETA  &FLAGON+3                SET FULLSCREEN FOR EX  @G76XRYU
         AGO   .EDDONE                                         @G76XRYU
.NOED    ANOP                                                  @G76XRYU
         AIF   (&E).ERROR2              DUP OPTION             @G76XRYU
         AIF   (&NTJ EQ 1).ASIDERR      CAN'T SAY NOEDIT & ASID@OZ43223
&E       SETB  1                                               @G76XRYU
&OPT     SETA  &OPT+3                   FLAGS1 TO FULLSCR STAN @G76XRYU
&FLAGS2  SETA  1                        SET FLAGS2 TO NOEDIT   @G76XRYU
&FLAGON  SETA  &FLAGON+3                FLAGS1 TO FULLSCR EXEC @G76XRYU
.EDDONE  ANOP                      EDIT OPERAND IN RIGHT PLACE @G76XRYU
         AIF   (&RET NE 1).BADPOS  ..IF NOT IN 3RD POS-WARNING @G76XRYU
         AGO   .RET                ..ELSE OK                   @G76XRYU
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-16              SET WAIT OPTION IN EX  @G76XRYU
         AGO   .WAIDONE                 CHECK POSITION         @G76XRYU
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&OPT     SETA  &OPT+X'10'               SET WAIT=NOWAIT
&FLAGON  SETA  &FLAGON+16               SET FOR NOWAIT IN EXEC @G76XRYU
.WAIDONE ANOP                       ..WAIT IN RIGHT POSITION   @G76XRYU
         AIF   (&RET NE 2).BADPOS   ..IF NOT 4TH, WARNING      @G76XRYU
         AGO   .RET                 ..ELSE OK                  @G76XRYU
.HOL     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
&OPT     SETA  &OPT+X'08'               SET HOLD=HOLD
&FLAGON  SETA  &FLAGON+8                SET FOR HOLD IN EXEC   @G76XRYU
         AGO   .HOLDONE                 CHECK POSITION         @G76XRYU
.NOH     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        NOHOLD OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-8               SET FOR NOHOLD IN EXEC @G76XRYU
.HOLDONE ANOP                        ..CHECK HOLD POSITION     @G76XRYU
         AIF   (&RET NE 3).BADPOS    ..IF ¬ 5TH OPER, WARNING  @G76XRYU
         AGO   .RET                  ..ELSE OK                 @G76XRYU
.BRE     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&OPT     SETA  &OPT+X'04'               SET BREAKIN
&FLAGON  SETA  &FLAGON+4                SET BREAKIN IN EXEC    @G76XRYU
         AGO   .BRDONE                  CHECK BREAK POSITION   @G76XRYU
.NOB     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-4               SET NOBREAK OPTION EX  @G76XRYU
.BRDONE  ANOP                           CHECK BREAK POSITION   @G76XRYU
         AIF   (&RET NE 4).BADPOS    ..IF NOT THE 6TH OPERAND  @G76XRYU
         AGO   .RET                  ..ELSE OK                 @G76XRYU
.HPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&FLAGOFF SETA  &FLAGOFF-32              SET HI PRIO OPTION EX  @G76XRYU
         AGO   .PRDONE                  CHECK POSITION         @G76XRYU
.LPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&OPT     SETA  &OPT+X'20'               SET  LOW PRIORITY OPTION
&FLAGON  SETA  &FLAGON+32               SET LOW PRI OPTION EX  @G76XRYU
.PRDONE  ANOP                     ..CHECK PRIORITY OPERAND POS @G76XRYU
         AIF   (&RET NE 5).BADPOS   ..IF ¬7TH OPERAND,WARNING  @G76XRYU
         AGO   .RET                 ..ELSE OK                  @G76XRYU
.BADPOS  ANOP             ..ISSUE WARNING IF OPERAND MISPLACED @G76XRYU
         MNOTE 4,'IHB300 WARNING: &PARM POSITIONAL PARAMETER MISPLACED'
.RET     ANOP
&PARM    SETC  '&WAIT'
         AIF   ('&RET' EQ '1').CKPARM   CHECK WAIT
&PARM    SETC  '&HOLD'
         AIF   ('&RET' EQ '2').CKPARM   CHECK HOLD
&PARM    SETC  '&BRKI'
         AIF   ('&RET' EQ '3').CKPARM   CHECK BRKI
&PARM    SETC  '&PRTY'
         AIF   ('&RET' EQ '4').CKPARM   CHECK PRTY
.*  PARAMETERS PROCESSED                                       @G76XRYU
         AIF   ('&MF' EQ '' AND &FLAGS2 EQ 0).OLD NON-EXTENDED @G76XRYU
         AIF   ('&MF' EQ 'L').LFORM       ...LIST EXPANSION... @G76XRYU
         AIF   ('&MF' EQ 'I' OR '&MF' EQ '').STFORM .ST. FORM. @G76XRYU
.******************                                            @G76XRYU
.*  EXECUTE FORM  *                                            @G76XRYU
.******************                                            @G76XRYU
&NAME    CNOP  0,4                          TPUT EXECUTE FORM  @G76XRYU
         AIF   ('&MF(2)'(1,1) EQ '(').MFREG  IF IN RX FORM  .. @G76XRYU
         LA    1,&MF(2)                     R1=>USER PARM LIST @G76XRYU
         AGO   .GOTPARM                                        @G76XRYU
.MFREG   ANOP                             .. ELSE, IN A REG .. @G76XRYU
         AIF   ('&MF(2)' EQ '(1)').GOTPARM ..IF NOT REG 1..    @G76XRYU
         LR    1,&MF(2)                     POINT R1 AT PARMS  @G76XRYU
.GOTPARM ANOP                                                  @G76XRYU
         AIF   (&FLAGOFF EQ 127).SKIPAND ..TURN OFF ANY FLAGS? @G76XRYU
         NI    4(1),&FLAGOFF                RESET FLAGS 1      @G76XRYU
.SKIPAND ANOP                      ..CHECK FOR FLAGS TURNED ON @G76XRYU
         AIF   (&FLAGON EQ 0).NOSET  ..TURN ON ANY FLAGS?      @G76XRYU
         OI    4(1),&FLAGON                 IN EXEC PARM LIST  @G76XRYU
.NOSET   ANOP                                                  @G76XRYU
         AIF   (&FLAGS2 EQ 0 AND NOT &E).NOFLAG2 ..IF NEW EDIT @G76XRYU
         MVI   12(1),&FLAGS2                RESET FLAGS2       @G76XRYU
.NOFLAG2 ANOP                                                  @G76XRYU
         AGO   .PARMCHK                 ..END UNIQUE E CODE..  @G76XRYU
.****************************                                  @G76XRYU
.*  STANDARD EXTENDED FORM  *                                  @G76XRYU
.****************************                                  @G76XRYU
.STFORM  ANOP                   ..STANDARD EXTENDED FORM CODE. @G76XRYU
&NAME    CNOP  0,4                          STANDARD EXTENDED  @G76XRYU
         AIF   ('&BFF' NE '(1)').NOTOLD  .IF OLD STANDARD FORM @G76XRYU
         STCM  1,B'0111',*+13               OLD SUPPORT ONLY   @G76XRYU
&OLDBUFF SETB  1                         .FLAG OLD BUFF ADDR.. @G76XRYU
.NOTOLD  ANOP                                                  @G76XRYU
         BAL   1,*+20                       BRANCH AROUND PARM @G76XRYU
TPUT&NDX DS    0H                           TPUT EXTENDED PARM @G76XRYU
         DC    H'0'                         ADDR SPACE ID      @G76XRYU
         DC    H'0'                         OUTPUT BUFFER SIZE @G76XRYU
         DC    AL1(&OPT)                    FLAGS 1            @G76XRYU
         DC    AL3(0)                       OUTPUT BUFFER ADDR @G76XRYU
         DC    A(0)                         ADDRESS OF USER ID @G76XRYU
         DC    AL1(&FLAGS2)                 FLAGS 2            @G76XRYU
         DC    AL3(0)                       RESERVED BYTES     @G76XRYU
.************************************************              @G76XRYU
.*  COMMON CODE FOR STANDARD AND EXECUTE FORMS  *              @G76XRYU
.************************************************              @G76XRYU
.PARMCHK ANOP                           ..GET PARMS FOR E & I  @G76XRYU
         AIF   ('&SIZE' EQ '').CKID     ...IF BUFF SIZE GIVEN. @G76XRYU
         AIF   ('&SIZE'(1,1) EQ '(').SIZEREG  ...IF AN INTEGER @G76XRYU
         AIF   (T'&SIZE NE 'N').SIZEQU  IF AN EQUATE           @OZ43223
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767.. @G76XRYU
.SIZEQU  ANOP                                                  @OZ43223
         AIF   ('&MF' NE 'I' AND '&MF' NE '').SIZEEX .STANDARD @G76XRYU
         ORG   TPUT&NDX+2                   PUT SIZE VALUE     @G76XRYU
         DC    AL2(&SIZE)                   IN PARM LIST       @OZ43223
         ORG
         AGO   .CKID                                           @G76XRYU
.SIZEEX  ANOP                         ..IF EXECUTE             @G76XRYU
         B     *+6                          BR PAST SIZE VALUE @OZ43223
         DC    AL2(&SIZE)                   BUFSIZE            @OZ43223
         LH    0,*-2                        GET THE SIZE VALUE @G76XRYU
         STH   0,2(1)                       INTO THE PARM LIST @G76XRYU
         AGO   .CKID                                           @G76XRYU
.SIZEREG ANOP                                 ...ELSE A REG .. @G76XRYU
         STH   &SIZE(1),2(1)                PUT SIZE IN PARM   @G76XRYU
.CKID    ANOP                           ... CHECK IDS ...      @G76XRYU
         AIF   (&NTJ EQ 0).CKADDR       ..IF THERE IS AN ID..  @G76XRYU
         AIF   ('&TSID' EQ '').CKIDLOC  ..IF AN ASID # GIVEN.. @G76XRYU
         AIF   ('&TSID'(1,1) EQ '(').ASIDREG  ..IF AN INTEGER. @G76XRYU
         AIF   ((T'&ASID NE 'N' AND T'&TJID EQ 'O') OR (T'&TJID NE 'N' X
               AND T'&ASID EQ 'O')).IDEQU                      @OZ43223
         AIF   (&TSID GT 32767).IDERROR         .NOT > 32767.. @G76XRYU
.IDEQU   ANOP                                                  @OZ43223
         AIF   ('&MF' NE 'I' AND '&MF' NE '').IDEX ..STANDARD  @G76XRYU
         ORG   TPUT&NDX                     PUT ASID VALUE     @G76XRYU
         DC    AL2(&TSID)                   IN PARM LIST       @G76XRYU
         ORG
         AGO   .CKADDR                                         @G76XRYU
.IDEX    ANOP                               IF EXECUTE         @G76XRYU
         B     *+6                          GET AROUND ID #    @G76XRYU
         DC    AL2(&TSID)                   PUT ID # HERE      @OZ43223
         LH    0,*-2                        STORE ASID # IN    @G76XRYU
         STH   0,0(1)                       PARAMETER LIST     @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.ASIDREG ANOP                           .. ELSE ASID IN A REG. @G76XRYU
         STH   &TSID,0(1)                   STORE REG IN PARM  @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.CKIDLOC ANOP                           .. ELSE ID AT AN ADDR  @G76XRYU
.*                                            (ASIDLOC)        @G76XRYU
         AIF   ('&TSIDLOC' EQ '').CKUSER ..IF AN ADDRESS GIVEN @G76XRYU
         AIF   ('&TSIDLOC'(1,1) EQ '(').LOCIDRG  ..IF RX ADDR. @G76XRYU
         MVC   0(2,1),&TSIDLOC              MOVE ID INTO PARMS @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.LOCIDRG ANOP                           .. ELSE ID ADDR IN REG @G76XRYU
         MVC   0(2,1),0&TSIDLOC             MOVE ID INTO PARMS @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.CKUSER  ANOP                           ..ELSE A USER ID GIVEN @G76XRYU
         AIF   ('&USERIDL'(1,1) EQ '(').USEREG ..IF RX ADDR..  @G76XRYU
         AIF   ('&USERIDL'(K'&USERIDL,1) EQ ')' OR ('&MF' NE 'I' AND '&*
               MF' NE '')).USERX         ..IF STANDARD FORM    @G76XRYU
         ORG   TPUT&NDX+8                   PUT USER ID ADDR   @G76XRYU
         DC    A(&USERIDL)                  IN PARM LIST       @G76XRYU
         ORG
         AGO   .CKADDR                                         @G76XRYU
.USERX   ANOP                         ..IF EXECUTE OR LA ADDR  @G76XRYU
         LA    0,&USERIDL                   GET USER ID ADDR   @G76XRYU
         ST    0,8(1)                       INTO THE PARM LIST @G76XRYU
         AGO   .CKADDR                                         @G76XRYU
.USEREG  ANOP                           ...      ELSE A REG .. @G76XRYU
         ST    &USERIDL(1),8(1)             PUT ID IN PARM     @G76XRYU
.CKADDR  ANOP                           ..GET OUT BUFFER ADDR  @G76XRYU
         AIF   (&OLDBUFF).FINISH        ..IF OLD FORM,COMPLETE @G76XRYU
         AIF   ('&BFF' EQ '').FINISH    ..IF BUFFER ADDR GIVEN @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(').BFFREG  ..IF AN RX ADDR... @G76XRYU
         AIF   ('&BFF'(K'&BFF,1) EQ ')' OR ('&MF' NE 'I' AND '&MF' NE '*
               ')).BFFRX                 ..AND STANDARD FORM   @G76XRYU
         ORG   TPUT&NDX+5                   PUT BUFFER ADDRESS @G76XRYU
         DC    AL3(&BFF)                    IN PARM LIST       @G76XRYU
         ORG
         AGO   .FINISH                                         @G76XRYU
.BFFRX   ANOP                      ..IF EXECUTE OR LA TYPE..   @G76XRYU
         LA    0,&BFF                       GET ADDR OF BUFFER @G76XRYU
         STCM  0,B'0111',5(1)               PUT IN PARM LIST   @G76XRYU
         AGO   .FINISH                                         @G76XRYU
.BFFREG  ANOP                               ..ELSE IN A REG .. @G76XRYU
         STCM  &BFF(1),B'0111',5(1)         STORE BUFFER ADDR  @G76XRYU
.FINISH  ANOP                                                  @G76XRYU
         OI    12(1),128                    SET HI BIT OF PARM @G76XRYU
         ICM   0,B'1000',*-3                SET HI BIT OF R0   @G76XRYU
.*                                        FROM 128 IN OI INSTR @G76XRYU
.SVCNEW  ANOP                           .. ISSUE SVC HERE ...  @G76XRYU
         SVC   93                           SVC TO MSG ROUTER  @G76XRYU
         MEXIT                                                 @G76XRYU
.**********************                                        @G76XRYU
.*  LIST FORM CODE    *                                        @G76XRYU
.**********************                                        @G76XRYU
.LFORM   ANOP                                                  @G76XRYU
         AIF   ('&TSIDLOC' EQ '').IDLOCOK ..IF L FORM INVALID. @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, ASIDLOC'
         MEXIT                                                 @G76XRYU
.IDLOCOK ANOP                           ..ASIDLOC OPERAND NULL @G76XRYU
&NAME    DS    0F                           L-FORM PARM LIST   @G76XRYU
         AIF   ('&TSID' NE '').LSTID    ..IF NO TSID GIVEN..   @G76XRYU
         DC    H'0'                         ASID HALFWORD      @G76XRYU
         AGO   .LBFFSIZ                                        @G76XRYU
.LSTID   ANOP                           ..ELSE TSID SPECIFIED. @G76XRYU
         AIF   ('&TSID'(1,1) EQ '(').REGERR   ..NOT A REGISTER @G76XRYU
         AIF   ((T'&ASID NE 'N' AND T'&TJID EQ 'O') OR (T'&TJID NE 'N' X
               AND T'&ASID EQ 'O')).IDEQU0                     @OZ43223
         AIF   (&TSID GT 32767).IDERROR         ..NOT > 32767. @G76XRYU
.IDEQU0  ANOP                                                  @OZ43223
         DC    AL2(&TSID)                   ADDR SPACE VALUE   @OZ43223
.LBFFSIZ ANOP                           .. CHECK BUFFER SIZE . @G76XRYU
         AIF   ('&SIZE' NE '').LSTSIZE  .. IF NO BUFFER SIZE . @G76XRYU
         DC    H'0'                         BUFF SIZE HALFWORD @G76XRYU
         AGO   .LBFADDR                                        @G76XRYU
.LSTSIZE ANOP                           .. ELSE A BUFFER SIZE. @G76XRYU
         AIF   ('&SIZE'(1,1) EQ '(').REGERR   .IF NOT IN A REG @G76XRYU
         AIF   (T'&SIZE NE 'N').SIZEQU0 IF AN EQUATE           @OZ43223
         AIF   (&SIZE GT 32767).SIZERR          .NOT > 32767.. @G76XRYU
.SIZEQU0 ANOP                                                  @OZ43223
         DC    AL2(&SIZE)                   BUFFER SIZE VALUE  @OZ43223
.LBFADDR ANOP                           .. CHECK BUFFER ADDR.. @G76XRYU
         DC    AL1(&OPT)                    FLAGS 1            @G76XRYU
         AIF   ('&BFF' NE '').LBFFLAB   ..IF NO BUFFER ADDR..  @G76XRYU
         DC    AL3(0)                       BUFFER ADDRESS     @G76XRYU
         AGO   .LSTUSER                                        @G76XRYU
.LBFFLAB ANOP                           .. ELSE BUFFER ADDRESS @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(').REGERR  ..IF NOT IN A REG  @G76XRYU
         DC    AL3(&BFF)                    ADDR OUTPUT BUFFER @G76XRYU
.LSTUSER ANOP                                                  @G76XRYU
         AIF   ('&USERIDL' NE '').LUSADDR  ..IF NO USER ID ..  @G76XRYU
         DC    A(0)                         USER ID            @G76XRYU
         AGO   .LISTEND                                        @G76XRYU
.LUSADDR ANOP                              ..ELSE USER ID ...  @G76XRYU
         AIF   ('&USERIDL'(1,1) EQ '(').REGERR  ..IF NOT REG . @G76XRYU
         DC    A(&USERIDL)                  USER ID            @G76XRYU
.LISTEND ANOP                               .. GEN FLAGS2 ..   @G76XRYU
         DC    AL1(&FLAGS2)                 FLAGS 2            @G76XRYU
         DC    AL3(0)                       RESERVED           @G76XRYU
         MEXIT                                                 @G76XRYU
.REGERR  ANOP                              ..REGISTER ERROR..  @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: MF=L, REGISTER OPERANDX
                SPECIFIED'                                     @G76XRYU
         MEXIT                                                 @G76XRYU
.*********************                                         @G76XRYU
.*   REGISTER FORM   *                                         @G76XRYU
.*********************                                         @G76XRYU
.RF      ANOP
         AIF   ('&MF' EQ '').RFNOMF   ..IF MF OPERAND GIVEN... @G76XRYU
         MNOTE 12,'IHB300 INCOMPATIBLE OPERANDS: R, MF'        @G76XRYU
         MEXIT                                                 @G76XRYU
.RFNOMF  ANOP                         ..IF NOEDIT SPECIFIED... @G76XRYU
         AIF   ('&WAIT' NE 'NOEDIT' AND '&HOLD' NE 'NOEDIT' AND '&BRKI'*
               NE 'NOEDIT' AND '&PRTY' NE 'NOEDIT').RFNOED     @G76XRYU
         MNOTE 12,'IHB300, INCOMPATIBLE OPERANDS: R, NOEDIT'   @G76XRYU
         MEXIT                                                 @G76XRYU
.RFNOED  ANOP                         CHECK REMAINING OPERANDS @G76XRYU
         AIF   ('&WAIT' NE '' OR '&HOLD' NE '' OR '&BRKI' NE '' OR '&PRX
               TY' NE '' OR &NTJ GT 0).RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD OPTIONS & BUFFER ADDR
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC    ..IF REG 0-ISSUE SVC..
         LR    0,&SIZE(1)               LOAD TJID & BUFFER SIZE
         AGO   .SVC                     ... ISSUE SVC CALL ...
.************                                                  @G76XRYU
.*  MNOTES  *                                                  @G76XRYU
.************                                                  @G76XRYU
.SIZERR  ANOP                      ..SIZE INTEGER NOT 0-32767. @G76XRYU
&PARM    SETC  'SIZE'                ..INDICATE BAD SIZE PARM. @G76XRYU
         AGO   .INTERR                                         @G76XRYU
.IDERROR ANOP                      ..ASID INTEGER NOT 0-32767. @G76XRYU
&PARM    SETC  'ASID'                ..INDICATE BAD ASID PARM. @G76XRYU
.INTERR  MNOTE 12,'IHB300 &PARM NOT IN RANGE 0-32767'          @G76XRYU
         MEXIT                                                 @G76XRYU
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&PARM
         MEXIT                                                 @OZ43223
.ASIDERR MNOTE 12,'IHB300 ASID/USERID INVALID WITH NOEDIT'     @OZ43223
         MEXIT                                                 @OZ43223
.***********************                                       @G76XRYU
.*  NON-EXTENDED FORM  *                                       @G76XRYU
.***********************                                       @G76XRYU
.OLD     ANOP            ....NON EXTENDED TPUT EXPANSION       @G76XRYU
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGFM  REG.
.*                                      FORM MACRO
         AIF   ('&TSID' EQ '').CHKLOC   GOTO CHECK TSIDLOC
         AIF   ('&TSID'(1,1) EQ '(').REGFM   REG. FORM MACRO
&ID      SETC  '&TSID'                  SET TSID
         AGO   .EXPAND                  GOTO EXPANSION
.CHKLOC  AIF   ('&TSIDLOC' EQ '').EXPAND  GO EXPAND IF NO 'TSIDLOC'
         AIF   ('&TSIDLOC'(1,1) EQ '(').REGFM  REG. FORM MACRO
.*   REGULAR FORMAT OF MACRO
.EXPAND  CNOP  0,4
         AIF   ('&TSIDLOC' NE '').LOC   TJLOC SPECIFIED
&NAME    B     *+10                BR AROUND CONS           JRB UZ31094
         DC    AL2(&ID)                 TSID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT,0)         OPTS AND PAD             JRB UZ31094
         L     0,*-6               LOAD SIZE                JRB UZ31094
         LA    1,&BFF              LOAD BUFF ADDR           JRB UZ31094
         ICM   1,8,*-10            INSERT OPT BYTE          JRB UZ31094
.SVC     ANOP
         AIF   ('&USERIDL' EQ '').GENSVC
         AIF   ('&USERIDL'(1,1) EQ '(').LR
         LA    15,&USERIDL
         AGO   .GENSVC
.LR      ANOP
         AIF   ('&USERIDL' EQ '(15)').GENSVC
         LR    15,&USERIDL(1)
.GENSVC  ANOP
         SVC   93                       ISSUE TGET/TPUT SVC
         SPACE 1
         MEXIT
.*   TSIDLOC IS SPECIFIED
.LOC     ANOP
&NAME    ICM   0,B'0011',&TSIDLOC       TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   0,16                     SHIFT TJID TO HI-ORDER BYTES
         AIF   (&OPT EQ 0).ZERO         BRANCH IF OPTIONS ARE ZERO
         O     0,*+8                    LOAD BUFFER SIZE
         B     *+10                BR AROUND CONS           JRB UZ31094
         DC    AL2(0)                   TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT,0)         OPTS AND PAD             JRB UZ31094
         LA    1,&BFF                   LOAD BUFFER ADDRESS    @ZA44359
         ICM   1,8,*-6             INSERT OPT BYTE          JRB UZ31094
         AGO   .SVC                     GOTO ISSUE SVC
.ZERO    LA    1,&SIZE                  LOAD BUFFER SIZE
         OR    0,1                      OR IT INTO REGISTER 0
         LA    1,&BFF                   Z HIGH ORDR BYTE & LD BFR ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.*   REGISTER FORMAT
.REGFM   AIF   ('&TSIDLOC' EQ '').NOLOC   SKIP IF TJIDLOC NOT SPECIFIED
         AIF   ('&TSIDLOC'(1,1) EQ '(').REGLOC    LOC IN REG  FORM
&NAME    ICM   15,B'0011',&TSIDLOC      TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   15,16                    MOVE TJID TO HI=ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.REGLOC  ANOP
&NAME    ICM   15,B'0011',0&TSIDLOC     TSID IN HIGH 2 BYTES   @G76XRYU
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.*   WHEN TJIDLOC IS NOT SPECIFIED
.NOLOC   AIF   ('&TSID' NE '').TJIDYES
&NAME    DS    0H                       TJID IS '0'
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.TJIDYES AIF   ('&TSID'(1,1) EQ '(').IDREG   TJID IN REG FORM
&NAME    LA    15,&TSID                 LOAD TJID
         AGO   .SHIFT                   GOTO SHIFT REG.0
.IDREG   ANOP
&NAME    LR    15,&TSID                 LOAD TJID IN REG 15
.SHIFT   SLL   15,16                    SHIFT TJID TO HI-ORDER BYTE
.*  CHECK SIZE OF BUFFER (BY NOW TJID IS IN HI-ORDER 2 BYTES OF REG 15)
.CHKSIZE AIF   ('&SIZE'(1,1) EQ '(').SZREG   SKIP IF SIZE IN REG
         LA    0,&SIZE                  LOAD SIZE IN REG.0
         AGO   .ORSIZE                  GOTO OR SIZE
.SZREG   AIF   ('&SIZE' EQ '(0)').ORSIZE  GOTO SET SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE
.ORSIZE  AIF   ('&TSID' EQ '' AND '&TSIDLOC' EQ '').PAST
         OR    0,15                     LOAD TJID + BUFFER SIZE
.PAST    AIF   (&OPT EQ 0 AND '&BFF'(1,1) EQ '(').ORONE
         AIF   (&OPT EQ 0 AND '&BFF'(1,1) NE '(').ZOPT ZERO OPTN
         CNOP  0,4
         B     *+8
         DC    AL1(&OPT)                OPTION BITS
         AIF   ('&BFF'(1,1) EQ '(').REGGO   BFFR IN REG.
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD PARAMETER IN REG.1
         AGO   .SVC                     GOTO ISSUE SVC
.ZOPT    LA    1,&BFF                   LOAD BUFFER ADDR IN REG 1
         AGO   .SVC                     ISSUE SVC
.REGGO   DC    AL3(0)                   BUFFER ADDR
         AIF   ('&BFF' EQ '(1)').ORONE  GOTO OR OPTIONS
         L     1,*-4                    LOAD OPTIONS
         OR    1,&BFF(1)                SET OPTIONS AND BUFFER ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.ORONE   LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         AIF   (&OPT EQ 0).SVC          GOTO ISSUE SVC IF OPT EQ 0
         O     1,*-8                    SET OPTIONS
         AGO   .SVC
         MEND
./ ADD NAME=K        0108-79143-81120-1639-00007-00007-00005-BROIDO
         MACRO
&N       K     ,                       IDENTICAL TO THE ERASE MACRO.
&N       LA    0,9                     LOAD LENGTH.
         LA    1,=X'F11140403C40400013'
         ICM   1,8,=X'03'              SET FULLSCR OPTION.
         SVC   93                      INVOKE TPUT.
         MEND
./ ADD NAME=MRSCTLB  0112-79089-81160-1112-00034-00026-00034-LANDERS
         MACRO
&NAME    MRSCTLB
         AIF   ('&NAME' EQ '').CONT
&NAME    DSECT
.CONT    ANOP
         SPACE 1
***********************************************************************
*                                                                     *
*        M.R.S CONTROL BLOCK                            28 DEC 79- JRB*
*                                                                     *
***********************************************************************
         SPACE 1
MCB      DS    0CL200
MCBIDENT DC    C'MCB '             CONTROL BLOCK-ID.
MCBUSER  DS    CL7                 USER-ID
MCBUPDTE DS    CL1                 UPDATE SWITCH (Y OR N)
MCBJOB   DS    CL8                 JOBNAME
MCBSTEM  DS    CL3                 STEM
MCBSTRNG DS    CL80                USER STRING
MCBDSN   DS    CL3                 DSN (CONSTANT MRS)
MCBCPPL  DS    AL4                 CPPL ADDRESS (NOT FW ALIGNED)   JRB
MCBHARDC DS    C                   HARD COPY Y OR N
         DS    X                   RESERVED.                       JRB
         SPACE 1
MCBFLAG  DC    AL1(MCBGBIT)        BIT FLAGS.                      JRB
MCBTSO   EQU   B'10000000'         ONLINE USER.                    JRB
MCBTUBE  EQU   B'01000000'         TERMINAL IS CRT (327X)          JRB
MCBAJ    EQU   B'00100000'         AJ TERMINAL WAS SETUP BY AJSET. JRB
MCBGBIT  EQU   B'00000010'         GUARD BIT.  IF OFF, BAD NEWS.   JRB
MCBFCMD  EQU   B'00000001'         FIRST COMMAND FLAG              JRB
MCBDDNAM DC    CL6'FILE  '         LAST 6 CH. OF DATABASE DDNAMES  JDC
BLDLADDR DS    F                   ADDRESS OF BLDL LIST            JML
         DS    CL76                RESERVED.
         MEND
./ ADD NAME=MVC2L    0101-84306-84306-1348-00047-00049-00011-ANDERSO
         MACRO
&NAME    MVC2L &DEST,&SRC
         LCLC  &LENG,&S9,&SRC1
         LCLA  &K,&X,&Y,&LEN
&K       SETA  K'&SRC
&S9      SETC  '&SRC'(&K,1)
&Y       SETA  1
.YLOOP   AIF   ('&SRC'(&Y,1) EQ '''').FDLIT    FIND ' FOR LITERAL
&Y       SETA  &Y+1                LOOK AT NEXT
         AIF   (&Y LT &K).YLOOP    LOOP UNTIL END
         AIF   ('&S9' EQ ')').CLENG    FOUND A LENGTH ON OPERAND
&LENG    SETC  'L''&SRC'           USE LENGTH OF 2ND OPERAND
&NAME    MVC   &DEST.(&LENG),&SRC
         MEXIT
.CLENG   ANOP
&X       SETA  1
.XLOOP   AIF   ('&SRC'(&X,1) EQ '(').FDPAREN    FIND START OF LENGTH
&X       SETA  &X+1
         AIF   (&X LT &K).XLOOP    LOOP UNTIL END
         MNOTE 12,ILLEGAL LENGTH SPECIFICATION ON 2ND OPERAND
         MEXIT
.FDPAREN ANOP
&LENG    SETC  '&SRC'(&X+1,&K-&X-1)
&SRC1    SETC  '&SRC'(1,&X-1)
&NAME    MVC   &DEST.(&LENG),&SRC1
         MEXIT
.FDLIT   ANOP
&X       SETA  1
.LLOOP   AIF   ('&SRC'(&X,1) EQ 'L').FLENG    FIND LENGTH ON LITERAL
&X       SETA  &X+1
         AIF   (&X LT &Y).LLOOP    LOOP UNTIL START OF VALUE
&LEN     SETA  &K-&Y-1             INITIALIZE LENGTH OF STRING
.ADJLOOP ANOP
&X       SETA  &X+1
         AIF   (&X GT &K-2).ENDADJ    GET OUT IF TOO FAR
         AIF   ('&SRC'(&X,2) EQ '''''').ADJLEN
         AIF   ('&SRC'(&X,2) NE '&&').ADJLOOP
.ADJLEN  ANOP
&LEN     SETA  &LEN-1
         AGO   .ADJLOOP
.ENDADJ  ANOP
&NAME    MVC   &DEST.(&LEN),&SRC
         MEXIT
.FLENG   ANOP
&LENG    SETC  '&SRC'(&X+1,&Y-&X-1)
&NAME    MVC   &DEST.(&LENG),&SRC
         MEND
./ ADD NAME=NOW      0102-80015-84264-0929-00059-00056-00006-BROIDO
         MACRO
&NAME    NOW   &T,&X,&F
         LCLA  &A
* JOHNSON AND JOHNSON NOW MACRO                             CHANGE 1.0
.* AUTHOR: J. VAN DOREN
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H
.NONAME  AIF   ('&X' EQ '').STD
         AIF   ('&X' EQ 'STD').STD
         AIF   ('&X' EQ 'NOTIME').NT
         AIF   ('&X' EQ 'NODAY').ND
         AIF   ('&X' EQ 'NEITHER').N
         AIF   ('&X' EQ 'SLASH').S
         AIF   ('&X' EQ 'SNOTIME').SNT
         AIF   ('&X' EQ 'SNODAY').SND
         AIF   ('&X' EQ 'SONLY').SO
         MNOTE 16,'FORMAT (PARM 2) IF SPECIFIED MUST BE STD (DEFAULT), X
               NEITHER, NOTIME, NODAY, SLASH, SNOTIME, SNODAY, OR SONLYX
               FOUND: &X'
         MEXIT
.STD     ANOP
&A       SETA  &A+1
         AGO   .FCHK
.NT      ANOP
&A       SETA  &A+8
         AGO   .STD
.ND      ANOP
&A       SETA  &A+2
         AGO   .STD
.N       ANOP
&A       SETA  &A+10
         AGO   .STD
.S       ANOP
&A       SETA  &A+4
         AGO   .FCHK
.SNT     ANOP
&A       SETA  &A+8
         AGO   .S
.SND     ANOP
&A       SETA  &A+2
         AGO   .S
.SO      ANOP
&A       SETA  &A+10
         AGO   .S
.FCHK    AIF   ('&F' EQ '').FOK
         AIF   ('&F' EQ '(15)').F
         AIF   ('&F' EQ '(R15)').F
         L     2,=A(&F)            LOAD REGISTER 2 WITH ADDR OF DATE.
.F       ANOP
&A       SETA  &A+128
.FOK     AIF   ('&T' EQ '').R1
         AIF   ('&T' EQ '(1)').R1
         AIF   ('&T' EQ '(R1)').R1
         L     1,=A(&T)                LOAD RECV ADDR
.R1      ANOP
         LA    0,&A                    LOAD PARAMETER REG
         L     15,=V(MERKNOW)      POINT TO NOW SUBROUTINE.
         BALR  14,15               CALL NOW SUBROUTINE.
         MEND
./ ADD NAME=OFF      0200-85137-85137-0814-00023-00023-00000-BROIDO
         MACRO
&NAME    OFF   &FLAG
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &L
&L       SETC  'L'''
&NAME    NI    &FLAG,255-&L.&FLAG          (TURN OFF BIT FLAG)
         MEND
./ ADD NAME=OLDTGET,SSI=20730006
         MACRO
&NAME    TGET  &BFF,&SIZE,&EDIT,&WAIT
.*********************************************************************.
.*                                                                    *
.*RELEASE 23 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 22 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 21 DELETIONS                                               *.
.*                                                                   *.
.*STATUS - CHANGE LEVEL 000                                          *.
.*                                                                   *.
.*NAME - TGET                                                        *.
.*                                                                   *.
.*FUNCTION - THIS MACRO IS USED TO MOVE A LINE OF INPUT FROM THE TIOC*.
.*   INPUT BUFFER TO THE USER'S BUFFER AREA.                         *.
.*                                                                   *.
.*********************************************************************.
.*
.*   TGET BUFFER AREA,BUFFER SIZE,EDIT,WAIT  (EDIT/WAIT ARE DEFAULT)
.*          (2-12)      (2-12)    ASIS NOWAIT
.*
         LCLA  &OPT
         LCLB  &SW1,&SW2
         LCLB  &E,&W,&RET
         LCLC  &ERROPT
&OPT     SETA  X'80'
         AIF   ('&BFF' EQ '' OR '&SIZE' EQ '').ERROR1  ERROR CHECK
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
         AIF   ('&EDIT' EQ '').WAIT       SKIP IF NULL
         AIF   ('&EDIT' EQ 'EDIT').EDI    SET EDIT
         AIF   ('&EDIT' EQ 'ASIS').ASI    SET ASIS
         AIF   ('&EDIT' EQ 'WAIT').WAI    SET WAIT
         AIF   ('&EDIT' EQ 'NOWAIT').NOW  SET NOWAIT
&ERROPT  SETC  '&EDIT'                  SET FOR ERROR MSG
         AGO   .ERROR3
.WAIT    ANOP
&RET     SETB  1
         AIF   ('&WAIT' EQ '').CHKREG     SKIP IF NULL
         AIF   ('&WAIT' EQ 'EDIT').EDI    SET EDIT
         AIF   ('&WAIT' EQ 'ASIS').ASI    SET ASIS
         AIF   ('&WAIT' EQ 'WAIT').WAI    SET WAIT
         AIF   ('&WAIT' EQ 'NOWAIT').NOW  SET NOWAIT
&ERROPT  SETC  '&WAIT'                  SET FOR ERROR MSG
         AGO   .ERROR3
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
         AGO   .RET
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&SW1     SETB  1                        ASIS OPTION
         AGO   .RET
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
         AGO   .RET
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&SW2     SETB  1                        NOWAIT OPTION
         AGO   .RET
.RET     ANOP
         AIF   (&RET).CHKREG
         AGO   .WAIT                    NEXT POSITION
.CHKREG  SPACE 1
         CNOP  0,4
&OPT     SETA  &OPT+&SW2*16+&SW1        SET OPTIONS
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGST REG.
.*                                      NOTATION
.*
.*   REGULAR EXPANSION
.*
&NAME    B     *+12                     BRANCH AROUND CONSTANTS
         DC    AL2(0)                   FILLER
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTION BITS
         DC    AL3(&BFF)                ADDR OF BUFFER
         LM    0,1,*-8                  LOAD PARAMETER REGISTERS
.SVC     SVC   93                       ISSUE SVC
         SPACE
         MEXIT
.*
.*   REGISTER NOTATION
.*
.REGST   ANOP
&NAME    B     *+8                      BRANCH AROUND CONSTANT
         AIF   ('&BFF'(1,1) EQ '(' AND '&SIZE'(1,1) EQ '(').BOTH BOTH
.*                                      PARAMETERS ARE IN REG. FORM
         AIF   ('&SIZE'(1,1) EQ '(').SZREG   SIZE IN REG
.*
.*   BUFFER ADDR IN REGISTER FORM
.*
         DC    AL1(&OPT)                OPTION BITS
         DC    AL3(0)                   BUFFER ADDR
         LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         O     1,*-8                    SET OPTIONS
         LA    0,&SIZE                  LOAD SIZE OF BUFFER
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   BUFFER SIZE IN REGISTER FORM
.*
.SZREG   DC    AL1(&OPT)                OPTION BITS
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD PARAMETER REGISTER
         AIF   ('&SIZE' EQ '(0)').SVC   SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   WHEN BOTH ARE IN REGISTER NOTATION
.*
.BOTH    DC    AL1(&OPT)                OPTION BITS
         DC    AL3(0)                   BUFFER ADDR
         LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         O     1,*-8                    SET OPTIONS
         AIF   ('&SIZE' EQ '(0)').SVC   GOTO SVC IF (0) SPECIFIED
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC                     GOTO ISSUE SVC
.RF      ANOP
         AIF   ('&WAIT' NE '').RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD BUFFER ADDRESS IN REG 1
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC
         LR    0,&SIZE(1)               LOAD BUFFER SIZE IN REG 0
         AGO   .SVC
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&ERROPT
         MEND
./ ADD NAME=ON       0200-85137-85137-0814-00023-00023-00000-BROIDO
         MACRO
&NAME    ON    &FLAG
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &L
&L       SETC  'L'''
&NAME    OI    &FLAG,&L.&FLAG              (TURN ON BIT FLAG)
         MEND
./ ADD NAME=REGS     0103-79143-82335-0931-00026-00009-00019-ZADSJBR
         MACRO
&NAME    REGS
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &I
&I       SETA  0
.LUP     ANOP
R&I      EQU   &I
&I       SETA  &I+1
         AIF   (&I LE 15).LUP
         MEND
./ ADD NAME=REQU     0100-85260-85260-1113-00030-00030-00000-BROIDO
         MACRO
&NAME    REQU
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*                                                                    *
.*   THIS VERSION OF MY REGS MACRO IS SUPPLIED FOR COMPATIBILITY      *
.*   WITH THE VIRGINIA BLUE CROSS DISASSEMBLER.                       *
.*                                                                    *
.**********************************************************************
         LCLA  &I
&I       SETA  0
.LUP     ANOP
R&I      EQU   &I
&I       SETA  &I+1
         AIF   (&I LE 15).LUP
         MEND
./ ADD NAME=RESTORE  0101-85261-85284-1505-00034-00034-00001-BROIDO
         MACRO
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.*    THIS IS A REPLACEMENT FOR IBM'S RESTORE MACRO WHICH IS NOT      *
.*        DISTRIBUTED TO ITS CUSTOMERS.  IT'S CONSTRUCTION WAS        *
.*        INFERRED FROM THE DEBUGGING GUIDE.                          *
.*                                                                    *
.**********************************************************************
.*
&NAME    RESTORE &CHAIN,&RELATED=
         AIF   ('&CHAIN' EQ '').E1
&NAME    IHBINNRA &CHAIN           LOAD REGISTER 1.
         SVC   17                  ISSUE RESTORE SVC.
         MEXIT
.E1      IHBERMAC 01,150                    MISSING PARAMETER
         MEND
./ ADD NAME=SPIB     0107-82223-82335-0932-00086-00054-00038-ZADSJBR
         MACRO
&NAME    SPIB  &DSECT=NO
         LCLC  &N
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
.**********************************************************************
.*                                                                    *
.*      SPIP - GDDM SYSTEM PROGRAMMER INTERFACE BLOCK.  USED WITH     *
.*         THE GDDM SYSTEM PROGRAMMER VERSION OF THE REENTRANT        *
.*         INTERFACE.  CONTROL BLOCK FORMAT COPIED FROM               *
.*         SC33-0101-1:  GRAPHICAL DATA DISPLAY MANAGER RELEASE 2     *
.*         USER'S GUIDE.  MACRO VERSION 1.00, WRITTEN AT A.I.G.       *
.*         BY J. BROIDO, 8/11/82.                                     *
.*                                                                    *
.**********************************************************************
.*
*                                  MACRO VERSION 1.00, 8/11/82
.*
         AIF   ('&DSECT' EQ 'NO').NODSECT
&N       SETC  '&NAME'
         AIF   ('&N' NE '').NAMEOK
&N       SETC  'SPIB'
.NAMEOK  ANOP
&N       DSECT                     GDDM SYS. PGMMR. INTERFACE BLOCK.
         AGO   .DCONT
.NODSECT ANOP
&NAME    DS    0H                  GDDM SYS. PGMMR. INTERFACE BLOCK.
.DCONT   ANOP
SPIBHEAD EQU   *
SPIBFLAG DC    XL4'00'             FOUR BYTES OF FLAGS.
         ORG   SPIBFLAG
SPIBFLGG DS    X                   GENERAL PURPOSE FLAGS.
SPIBPVCF EQU   B'10000000'           PARAMETER VERIFICATION FLAG.
SPIBSTGF EQU   B'01000000'           STORAGE CONTROL FLAG.
SPIBERBF EQU   B'00100000'           ERROR FEEDBACK BLOCK FLAG.
SPIBERTF EQU   B'00010000'           ERROR THRESHOLD FLAG.
SPIBSTXF EQU   B'00001000'           STORAGE REQUEST EXITS FLAG.
SPIBABRF EQU   B'00000100'           ABEND RETURN FLAG.
         SPACE 1
SPIBFLGD DS    X                   DEVICE PROTOCOL FLAGS.
SPIBPA2F EQU   B'01000000'           RETURN PA2 TO ASREAD.
SPIBXFBF EQU   B'00001000'           ATTENTION FEEDBACK BLOCK FLAG.
         SPACE 1
SPIBFLGA DS    X                   CICS CONTROL FLAGS.
SPIBTISF EQU   B'10000000'           TRANSACTION INDEPENDENCE FLAG.
SPIBAUDF EQU   B'01000000'           RECORD RESOURCES FLAG.
         SPACE 1
         DS    X                   RESERVED.
SPIBERBL DC    F'0'                LENGTH OF ERROR FEEDBACK BLOCK...
*                                  ... REQUIRED IF SPIBERBF = 1.
SPIBERBP DC    F'0'                ADDRESS OF ERROR FEEDBACK BLOCK...
*                                  ... REQUIRED IF SPIBERBF = 1.
SPIBERTH DC    F'0'                ERROR THRESHOLD ...
*                                  ... REQUIRED IF SPIBERTF = 1.
SPIBSRAP DC    F'0'                ADDRESS OF STORAGE AUDIT TRAIL ...
*                                  ... ANCHOR (IF SPIBAUDF = 1).
SPIBPRAP DC    F'0'                ADDRESS OF PROGRAM AUDIT TRAIL ...
*                                  ... ANCHOR (IF SPIBAUDF = 1).
         DC    F'0'                RESERVED.
SPIBXFBL DC    F'0'                LENGTH OF ATTENTION FEEDBACK ...
*                                  ... BLOCK (IF SPIBXFBF = 1).
SPIBXFBP DC    F'0'                ADDRESS OF ATTENTION FEEDBACK ...
*                                  ... BLOCK (IF SPIBXFBF = 1).
SPIBSXGP DC    F'0'                ADDRESS OF GET STORAGE APPLI- ...
*                                  ... CATION EXIT (IF SPIBSTXF = 1).
SPIBSXFP DC    F'0'                ADDRESS OF FREE STORAGE APPLI- ...
*                                  ... CATION EXIT (IF SPIBSTXF = 1).
SPIBSXPA DC    F'0'                USER DEFINED PARAMETER TO BE ...
*                                  ... PASSED TP APPLICATION ...
*                                  ... STORAGE EXIT (IF SPIBSTXF = 1).
         MEND
./ ADD NAME=TEST     0104-79143-82335-0932-00027-00010-00018-ZADSJBR
         MACRO
&NAME    TEST  &MASK=F
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         AIF   (K'&MASK GT 1).ERR1
         CNOP  0,4
&NAME    BAL   1,*+10
         DC    X'0&MASK',VL3(TSOSPIE),X'7FFF'    PICA.
         SVC   14                                ISSUE SPIE SVC.
         MEXIT
.ERR1    MNOTE 8,'INVALID PROGRAM MASK.'
         MEND
./ ADD NAME=TF       0108-81041-85184-0754-00023-00004-00021-BROIDO
         MACRO
&NAME    TF    &FLAG
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLC  &L
&L       SETC  'L'''
&NAME    TM    &FLAG,&L.&FLAG              (TEST FLAG).
         MEND
./ ADD NAME=VDEF     0108-84303-84306-1149-00103-00088-00044-ANDERSO
         MACRO
&NAME    VDEF  &VLIST
         LCLA  &LENG,&CTRBASE,&SUB
         LCLB  &FIXB(99),&BITB(99),&HEXB(99),&CHRB(99),&INVB(99)
         LCLB  &LN1B(99),&BGO
         LCLC  &E
         GBLA  &CTR
&SUB     SETA  1                   SET ORIGINAL SUB
&CTRBASE SETA  &CTR                KEEP TRACK OF ORIGINAL FOR 2ND PASS
         AIF   (&BGO).BDONE
&BGO     SETB  1
&NAME    B     GO&SYSNDX
.BDONE   ANOP
         AIF   (D'VDEFLIT).LOOP    SEE IF 'VDEFINE' DEFINED YET
VDEFLIT  DC    CL8'VDEFINE'        NAME OF SERVICE
.LOOP    ANOP
&E       SETC  '&VLIST(&SUB)'      GET CURRENT ENTRY IN LIST
         AIF   (T'&E NE 'U').DEFINED
.UNDEF   MNOTE 8,'VARIABLE &VLIST(&SUB) NOT DEFINED IN PROGRAM'
&INVB(&SUB) SETB 1
         AGO   .ENDLOOP
.DEFINED ANOP
VNAM&CTR DC    C'(&VLIST(&SUB))'   CONSTANT FOR NAME OF VARIABLE
         AIF   (T'&E EQ 'A').FIXED    FIND FORMAT FOR TYPE
         AIF   (T'&E EQ 'F').FIXED
         AIF   (T'&E EQ 'G').FIXED
         AIF   (T'&E EQ 'H').FIXED
         AIF   (T'&E EQ 'Q').FIXED
         AIF   (T'&E EQ 'R').FIXED
         AIF   (T'&E EQ 'S').FIXED
         AIF   (T'&E EQ 'V').FIXED
         AIF   (T'&E EQ 'Y').FIXED
         AIF   (T'&E EQ 'B').BIT
         AIF   (T'&E EQ 'X').HEX
         AIF   (T'&E EQ 'C').CHAR
         AIF   (T'&E EQ 'Z').CHAR
         MNOTE 8,'ILLEGAL TYPE ON VARIABLE &VLIST(&SUB)'
&INVB(&SUB) SETB 1
         AGO   .ENDLOOP
.FIXED   ANOP  ,                   FIXED FORMAT:
&FIXB(&SUB) SETB  1                         SET FLAG
         AIF   (D'FIXEDLIT).GETLENG     IF NEEDED,
FIXEDLIT DC    C'FIXED'                      GENERATE LITERAL
         AGO   .GETLENG
.BIT     ANOP  ,                   BIT FORMAT
&BITB(&SUB) SETB  1
         AIF   (D'BITLIT).GETLENG
BITLIT   DC    C'BIT'
         AGO   .GETLENG
.HEX     ANOP  ,                   HEX FORMAT
&HEXB(&SUB) SETB  1
         AIF   (D'HEXLIT).GETLENG
HEXLIT   DC    C'HEX'
         AGO   .GETLENG
.CHAR    ANOP  ,                   CHAR FORMAT
&CHRB(&SUB) SETB  1
         AIF   (D'CHARLIT).GETLENG
CHARLIT  DC    C'CHAR'
.GETLENG ANOP  ,                   GET LENGTH OF VARIABLE
&LENG    SETA  L'&VLIST(&SUB)      LENGTH ATTRIBUTE
LENG&CTR DC    F'&LENG'                      DEFINE LENGTH
&LNB1(&SUB) SETB (&LENG EQ 1)
.SKIPLEN ANOP
.ENDLOOP ANOP
&CTR     SETA  &CTR+1              NEXT CTR
&SUB     SETA  &SUB+1              NEXT SUB
         AIF   (&SUB LE N'&VLIST).LOOP
&SUB     SETA  1                   START OVER TO GENERATE CALLS
&CTR     SETA  &CTRBASE            RESET CTR TO BASE
GO&SYSNDX DS   0H
.CLOOP   ANOP
         AIF   (NOT &LNB1(&SUB)).NOLENG
&L       SETC  'L''&VLIST(&SUB)'
         LA    15,&L               LENGTH DID NOT EXIST AT MACRO
         ST    15,LENG&CTR             EXPANSION:  CALCULATE IT
.NOLENG  ANOP
         AIF   (&INVB(&SUB)).ENDCL
         AIF   (&FIXB(&SUB)).CFIX
         AIF   (&BITB(&SUB)).CBIT
         AIF   (&HEXB(&SUB)).CHEX
         AIF   (&CHRB(&SUB)).CCHAR
         MNOTE 12,'MACRO ERROR -- ILLEGAL FLAGS FOR &VLIST(&SUB)'
.CFIX    ANOP
         CALL  ISPLINK,(VDEFLIT,VNAM&CTR,&VLIST(&SUB),FIXEDLIT,        +
               LENG&CTR),VL
         AGO   .ENDCL
.CBIT    ANOP
         CALL  ISPLINK,(VDEFLIT,VNAM&CTR,&VLIST(&SUB),BITLIT,          +
               LENG&CTR),VL
         AGO   .ENDCL
.CHEX    ANOP
         CALL  ISPLINK,(VDEFLIT,VNAM&CTR,&VLIST(&SUB),HEXLIT,          +
               LENG&CTR),VL
         AGO   .ENDCL
.CCHAR   ANOP
         CALL  ISPLINK,(VDEFLIT,VNAM&CTR,&VLIST(&SUB),CHARLIT,         +
               LENG&CTR),VL
         AGO   .ENDCL
.ENDCL   ANOP
&CTR     SETA  &CTR+1
&SUB     SETA  &SUB+1
         AIF   (&SUB LE N'&VLIST).CLOOP
         MEND
./ ADD NAME=VOPUT    0100-80009-80009-1134-00035-00035-00000-BROIDO
         MACRO
&NAME    VOPUT &M,&MF=I
         LCLA  &LEN,&I
         LCLB  &PAIR
&LEN     SETA  K'&M-2
&PAIR    SETB  0
&I       SETA  1
.QLOOPH  ANOP
&I       SETA  &I+1+&PAIR
         AIF   (&I GE K'&M).QDONEH
&PAIR    SETB  ('&M'(&I,2) EQ '''''' OR '&M'(&I,2) EQ '&&')
&LEN     SETA  &LEN-&PAIR
         AGO   .QLOOPH
.QDONEH  ANOP
         AIF   ('&MF' EQ 'E').E
         AIF   ('&MF' EQ 'L').L
&NAME    BAL   1,V&SYSNDX          POINT TO MESSAGE.
         DC    C&M                 MESSAGE.
         DS    0H
V&SYSNDX LA    0,&LEN              LOAD LENGTH.
         LA    1,0(,1)             CLEAR OPTION BYTE.
         BAL   14,OUT              CALL OUTPUT SUBROUTINE.
         MEXIT
.E       ANOP
&NAME    SR    0,0                 LOAD ...
         ICM   0,3,&M              ... LENGTH.
         LA    1,&M+2              POIN TO MESSAGE.
         BAL   14,OUT              CALL OUTPUT SUBROUTINE.
         MEXIT
.L       AIF   (&LEN EQ 0).LZ
&NAME    DC    AL2(&LEN),C&M       MESSAGE.
         MEXIT
.LZ      ANOP
&NAME    DC    AL2(0)              EMPTY MESSAGE.
         MEND
./ ADD NAME=VPUT     0105-79143-85287-1302-00044-00027-00037-BROIDO
         MACRO
&NAME    VPUT  &M,&MF=I,&MLOC=,&DCB=SYSPRINT
.*
.**********************************************************************
.*                                                                    *
.*   COPYRIGHT (C) 1979 BY JEFFREY R. BROIDO.  ALL RIGHTS RESERVED.   *
.*                                                                    *
.*   LICENSE IS HEREBY GRANTED TO AMERICAN INTERNATIONAL GROUP AND    *
.*   ITS AFFILIATES TO USE THIS MACRO.  HOWEVER, IT MUST NOT BE BE    *
.*   SOLD, GIVEN, OR OTHERWISE DISTRIBUTED TO ANY OTHER COMPANY OR    *
.*   DATA CENTER WITHOUT PRIOR WRITTEN PERMISSION OF:                 *
.*                                                                    *
.*                                                                    *
.*                                 JEFFREY R. BROIDO                  *
.*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLB  &PAIR
         LCLA  &LEN,&I
&LEN     SETA  K'&M+2
&PAIR    SETB  0
&I       SETA  1
.LOOP    ANOP
&I       SETA  &I+1+&PAIR
         AIF   (&I GE K'&M).DONE
&PAIR    SETB  ('&M'(&I,2) EQ '''''' OR '&M'(&I,2) EQ '&&')
&LEN     SETA  &LEN-&PAIR
         AGO   .LOOP
.DONE    ANOP
         AIF   ('&MF' EQ 'L').VL
&NAME    LA    1,&DCB              LOAD DCB ADDRESS.
         BAL   0,VPUT&SYSNDX       LOAD MSG ADDRESS
         DC    AL2(&LEN),AL2(0)    RCW - LENGTH OF MESSAGE.
         AIF   (&LEN LE 4).NOMSG
&MLOC    DC    C&M
.NOMSG   ANOP
VPUT&SYSNDX PUT (1),(0)
         MEXIT
.VL      ANOP
&NAME    DC    AL2(&LEN),AL2(0)    RCW - LENGTH OF MESSAGE.
&MLOC    DC    C&M
         MEND
./ ADD NAME=VTPUT    0105-79143-82335-0933-00052-00032-00023-ZADSJBR
         MACRO
&NAME    VTPUT &M,&MLAB,&MF=I
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &LEN,&I
         LCLB  &PAIR
&LEN     SETA  K'&M-2
&PAIR    SETB  0
&I       SETA  1
.QLOOPH  ANOP
&I       SETA  &I+1+&PAIR
         AIF   (&I GE K'&M).QDONEH
&PAIR    SETB  ('&M'(&I,2) EQ '''''' OR '&M'(&I,2) EQ '&&')
&LEN     SETA  &LEN-&PAIR
         AGO   .QLOOPH
.QDONEH  ANOP
         AIF   ('&MF' EQ 'E').E
         AIF   ('&MF' EQ 'L').L
&NAME    BAL   1,V&SYSNDX          POINT TO MESSAGE.
&MLAB    DC    C&M                 MESSAGE.
         DS    0H
V&SYSNDX LA    0,&LEN              LOAD LENGTH.
         LA    1,0(,1)             CLEAR OPTION BYTE.
         SVC   93                  ISSUE TPUT/TGET SVC.
         MEXIT
.E       ANOP
&NAME    SR    0,0                 LOAD ...
         ICM   0,3,&M              ... LENGTH.
         LA    1,&M+2              POIN TO MESSAGE.
         SVC   93                  ISSUE TPUT/TGET SVC.
         MEXIT
.L       AIF   (&LEN EQ 0).LZ
&NAME    DC    AL2(&LEN),C&M       MESSAGE.
         MEXIT
.LZ      ANOP
&NAME    DC    AL2(0)              EMPTY MESSAGE.
         MEND
./ ADD NAME=VWTPU    0158-79065-84033-2006-00114-00028-00104-Z53
         MACRO
&NAME    VWTPU &MM,&MLAB1,&MF=I,&MODE=
.*
.**********************************************************************
.*                                                                    *
,*   COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS             *
,*   RESERVED EXCEPT:                                                 *
,*                                                                    *
,*   PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS MACRO FREE      *
,*   OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR        *
,*   HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,       *
,*   ON THE OTHER HAND, IS APPROPRIATE.                               *
,*                                                                    *
,*                                 BROIDO COMPUTER CONSULTING         *
,*                                 broidoj@gmail.com                  *
.*                                                                    *
.**********************************************************************
.*
         LCLA  &LEN,&I,&J,&LEN1
         LCLB  &PAIR
         LCLC  &M1,&M2,&U,&L,&MLAB,&X,&M
&M       SETC  '&MM'
&MLAB    SETC  '&MLAB1'
&U       SETC  'AEIOUBCDFGHJKLMNPQRSTVWXYZ'
&L       SETC  'aeioubcdfghjklmnpqrstvwxyz'
&LEN     SETA  K'&M-2
         AIF   ('&MF' EQ 'E').QEX
         AIF   ('&MODE' NE 'FOLD' OR '&MLAB' NE '').QCONT8
&MLAB    SETC  'V&SYSNDX.E'
.QCONT8  ANOP
&PAIR    SETB  0
&I       SETA  1
&LEN1    SETA  &LEN+2
.QLOOPH  ANOP
&I       SETA  &I+1+&PAIR
         AIF   (&I GE K'&M).QDONEH
&PAIR    SETB  ('&M'(&I,2) EQ '''''' OR '&M'(&I,2) EQ '&&')
&LEN     SETA  &LEN-&PAIR
         AGO   .QLOOPH
.QDONEH  ANOP
         AIF   ('&MF' EQ 'L').QPARM
&NAME    CNOP  0,4                 FULLWORD ALIGN PARM LIST.
         BAL   1,V&SYSNDX.A        POINT TO MESSAGE.
         AGO   .QCONT
.QPARM   ANOP
&NAME    DS    0F                  FULLWORD ALIGN PARM LIST.
.QCONT   ANOP
         DC    AL2(&LEN+4),X'8000' LENGTH AND FLAGS FOR WTO.
         AIF   ('&MODE' EQ 'FOLD').MFOLD
&MLAB    DC    C&M                 MESSAGE.
         AGO   .QCONT1
.MFOLD   ANOP
&M2      SETC  ''
&J       SETA  1
.LU1     ANOP
         AIF   ('&J' GT '&LEN1').QCONT5
&I       SETA  1
.LU2     ANOP
         AIF   ('&M'(&J,1) NE '&L'(&I,1)).BU2
&M2      SETC  '&M2'.'&U'(&I,1)
         AGO   .BU1
.BU2     ANOP
&I       SETA  &I+1
         AIF   (&I LE 26).LU2
&M2      SETC  '&M2'.'&M'(&J,1)
.BU1     ANOP
&J       SETA  &J+1
         AGO   .LU1
.QCONT5  ANOP
&X       SETC  'V&SYSNDX.D'
&X       DC    C&M2                UPPERCASE MESSAGE.
.QCONT1  DC    X'02000020'         ROUTCDE=11,DESC=7
         AIF   ('&MF' EQ 'L').QEND
         AIF   ('&MODE' NE 'FOLD').QCONT2
&MLAB    DC    C&M                 RAW MESSAGE.
.QCONT2  DS    0H
&X       SETC  'V&SYSNDX.A'
&X       TM    FLAG,$TSO           RUNNING UNDER TSO?
         BO    V&SYSNDX.B          B IF YES.
         SVC   35                  DO WTO (FOR WTP).
         B     V&SYSNDX.C          CONTINUE.
         AIF   ('&MODE' NE 'FOLD').QCONT6
&X       SETC  'V&SYSNDX.B'
&X       LA    1,&MLAB             POINT TO MESSAGE.
         AGO   .QCONT7
.QCONT6  ANOP
&X       SETC  'V&SYSNDX.B'
&X       LA    1,4(,1)             POINT TO MESSAGE.
.QCONT7  LA    0,&LEN              LOAD LENGTH.
         SVC   93                  TPUT SVC.
&X       SETC  'V&SYSNDX.C'
&X       EQU   *
.QEND    MEXIT
.QEX     AIF   ('&M' EQ '').QEX2
         AIF   ('&M' EQ '(1)').QEX2
         AIF   ('&M'(1,1) EQ '(').QEX1
         LA    1,&M                POINT TO PARM.
         AGO   .QEX2
.QEX1    ANOP
&M1      SETC  '&M'
         LR    1,&M1               POINT TO PARM.
.QEX2    TM    FLAG,$TSO           RUNNING UNDER TSO?
         BO    V&SYSNDX.B          B IF YES.
         SVC   35                  DO WTO (FOR WTP).
         B     V&SYSNDX.C          CONTINUE.
&X       SETC  'V&SYSNDX.B'
&X       LH    0,0(,1)             LOAD LENGTH.
         SH    0,=H'4'             CORRECT LENGTH.
         LA    1,4(,1)             POINT TO MESSAGE.
         SVC   93                  TPUT SVC.
&X       SETC  'V&SYSNDX.C'
&X       EQU   *
         MEND
