FINDEM   TITLE 'GDG VOLSER DISPLAY PROGRAM'
*%A RENT SERV
         SPACE 1
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  broidoj@gmail.com                  *
*                                                                     *
***********************************************************************
         SPACE 1
         SPACE 1
***********************************************************************
*                                                                     *
*    THIS  PROGRAM WILL DISPLAY VOLSERS OF ALL CATALOGUED LEVELS      *
*                 OF A GDG.                                           *
*                                       JAMES L. LANDERS              *
*                                       J&J - RARITAN                 *
*                                                                     *
*    CHANGED TO PREVENT LOOP IF DATASET IS NOT A GDG.  11/12/81   KTB *
*    DROP QUOTES IN DSNAME                             11/12/81   KTB *
*    CHANGED TO ELIMINATE SILLY MESSAGES.  12/29/81, J. BROIDO, AIG   *
*                                                                     *
***********************************************************************
         SPACE 1
FINDEM   CSECT
         REGS                          EQUATE REGS
         STM   R14,R12,12(R13)         SAVE HIS REGS
         LR    R12,R15                 ESTABLISH BASE
         LR    R3,R1                   LOAD POINTER TO PARAMETER
         USING FINDEM,R12
         GETMAIN  R,LV=DYNL            GET STORAGE
         ST    R1,4(,R13)              GIVE HIM ADDRESS OF MY SAVAREA
         ST    R13,4(,R1)              POINT TO HIS SAVAREA
         LR    R13,R1                  POINT GPR 13 TO MY SAVAREA
         USING DYN,R13
         MVI   FLAG,X'00'              SET FLAG
         MVC   NONEMSG(71),NMSG        INITIALIZE MESSAGE
LOAD8    L     R8,0(,R3)               LOAD ADDRESS OF PARAMETER
LOAD4    LH    R4,0(,R8)               LOAD LENGTH OF PARAMETER
         SH    R4,=H'4'                SUBTRACT FIRST WORD
         SH    R4,2(,R8)               SUBTRACT OFFSET
PIGGY    AH    R8,2(,R8)               ADD OFFSET TO PARM ADDRESS
         AH    R8,=H'4'                ADD LENGTH OF FIRST WORD
*                                      GPR8 NOW POINTS TO BEGINNING
*                                      OF DSNAME FIELD AND GPR4
*                                      CONTAINS THE LENGTH
*
*
         C     R4,=F'0'                IS THERE NO PARM
         BE    TELLEM                  IF SO ASK FOR ONE
         CLI   0(R8),X'7D'             Q. IS DSNAME WITHIN QUOTES? KTB
         BNE   TQUOTE                  -YES.  CHECK TRAILING QUOTE KTB
         LA    R8,1(,R8)               DROP THE LEADING QOUTE      KTB
         BCTR  R4,0                    REDUCE THE LENGTH           KTB
TQUOTE   LA    R7,0(R4,R8)             POINT PAST LAST BYTE IN DSN KTB
         BCTR  R7,0                    BACKUP TO LAST BYTE         KTB
         CLI   0(R7),X'7D'             Q. DO WE HAVE AN END QUOTE? KTB
         BNE   LOAD5                   -NO. THEN CONTINUE          KTB
         BCTR  R4,0                    REDUCE THE LENGTH AGAIN     KTB
LOAD5    LA    R5,DSAREA               LOAD ADDRESS OF DSN
         SR    R7,R7                   ZERO OUT GPR7
         MVC   DSAREA(44),BLANKS       BLANK OUT DSAREA
         BCTR  R4,R0                   TAKE AWAY ONE
         EX    R4,MOVEM                MOVE INPUT TO DSAREA
         EX    R4,OREM                 UPPERCASE INPUT
         LA    R4,1(,R4)               PUT ONE BACK
         SR    R2,R2                   ZERO OUT GPR2
LOC      LA    R6,RESULT               LOAD ADDRESS OF RESULT AREA
         LA    R5,DSAREA               LOAD ADDRESS OF DSN
         MVC   LOCLIST(LOCMODL),LOCMOD MOVE MODEL TO DSECT
         LA    R1,DSAREA               POINT TO DSAREA
         ST    R1,LOCLIST+4            STORE ADDRESS OF DSAREA
         LA    R1,RESULT               POINT TO RESULT
         ST    R1,LOCLIST+12           STORE ADDRESS OF RESULT
         LOCATE LOCLIST                LOCATE DSAREA
         AR    R5,R4                   POINT GPR5 TO END OF DSNAME
CC       C     15,=F'0'                CHECK FOR VALID CC
         LA    2,1(,2)                 INCREMENT LOCATE COUNTER
         BNE   THATSIT                 BRANCH IF INVALID
         C     R2,=F'2'                IS MORE THAN THE SECOND TIME ?
         BL    NONGDG                  IF NOT BRANCH
BONZO    LH    R10,0(6)                INSERT # OF VOLS INTO GPR 10
         MVC   LINE+6(44),DSAREA       MOVE ABSOLUTE GEN TO OUTPUT LINE
         LA    R1,LINE                 POINT TO BUFFER
         TPUT  (1),50                  PUT DSNAME TO TERMINAL
         OI    FLAG,DISP               TURN ON FLAG
         LA    R3,7                    LOAD GPR 3 WITH MAX VOLSERS
         LA    R9,LINE2                LOAD ADDRESS OF LINE2
MOVIT    BCT   R3,MOVEVOL              BRANCH IF LINE
         B     NEXTLINE                               IS FULL
BACKUP   LA    R3,7                    LOAD GPR 3 WITH MAX VOLSERS
MOVEVOL  MVC   4(6,R9),6(6)            MOVE VOLSER TO OUTPUT LINE
         LA    R9,10(,R9)              INCREMENT OUTPUT LINE POINTER
         LA    R6,12(,R6)              INCREMENT RESULT AREA POINTER
         BCT   R10,MOVIT               BRANCH WHEN NUMBER OF VOLUMES
         LA    R1,LINE2                POINT TO BUFFER
         TPUT  (1),78                  PUT VOLSER(S) TO TERMINAL
         TM    FLAG,NGDG               Q. IS THIS A NON-GDG DATASET?
         BO    NOMORE                  -YES. LOOK NO MORE          KTB
         MVI   LINE2,X'40'             MOVE BLANKS TO
         MVC   LINE2+1(77),LINE2                      OUTPUT LINE
GENERATE LA    R11,UGEN                POINT TO UNPACKED GENERATION
         CVD   R7,PGEN                 CONVERT GEN TO DECIMAL
         LA    R7,1(,R7)               INCREMENT GENERATION POINTER
         UNPK  UGEN(16),PGEN(8)        UNPACK RELATIVE GEN
         OI    UGEN+15,X'F0'           CLEAR SIGN
         CLC   UGEN(16),=16X'F0'       IS IT ALL ZEROES ?
         LA    R3,UGEN+1               POINT TO UGEN+1
         BE    ZEROES                  IF SO ....BRANCH
TEST     CLI   0(R11),X'F0'            IS IT A ZERO
         LA    R11,1(,R11)             INCREMENT COUNTER
         BE    TEST                    IF NOT -- NEXT CHARACTER
         SR    R11,R3                  DETERMINE # OF ZEROES
UPTHERE  S     R3,=F'1'                POINT TO UGEN
         LR    R8,R3                   POINT GPR8 TO BEGINNING OF GEN
         AR    R8,R11                  POINT GPR8 TO FIRST NON-ZERO
         S     R11,=F'16'              SUBTRACT TOTAL # OF CHARACTERS
         LPR   R11,R11                 MAKE IT POSITIVE
         LR    R3,R4                   LOAD LENGTH INTO GPR7
         S     R3,=F'44'               SUBTRACT TOTAL FIELD LENGTH
         LPR   R3,R3                   MAKE IT POSITIVE
         BCTR  R3,R0                   TAKE ONE AWAY
         MVI   0(R5),X'40'             BLANK OUT END
         EX    R3,BLANKO                     OF DSNAME
         MVC   0(2,R5),=C'(-'          MOVE (- AFTER DSN
         LA    R5,2(,R5)               INCREMENT POINTER AT END OF DSN
         EX    R11,MOVER               MOVE RELATIVE GEN TO DSN
         AR    R5,R11                  INCREMENT DSN POINTER
         MVI   0(R5),C')'              MOVE ) TO END OF DSN
         LA    R11,2(,R11)             INCREMENT LENGTH POINTER
         SR    R5,R11                  SET POINTER BACK
         MVC   LINE(6),0(R5)           MOVE RELATIVE GEN TO OUTPUT
BACK     B     LOC
ZEROES   L     R11,=F'15'              SET # OF LEADING ZEROES TO 15
         B     UPTHERE                 BRANCH BACK AFTER CALCULATION
NEXTLINE LA    9,LINE2                 LOAD ADDRESS OF OUTPUT LINE 2
PUTOUT   LA    R1,LINE2
         TPUT  (1),78
         MVI   LINE2,X'40'             MOVE BLANKS TO
         MVC   LINE2+1(77),LINE2                      OUTPUT LINE
         B     BACKUP
NONGDG   VTPUT 'This file is not a  GDG.'
         OI    FLAG,NGDG               TURN NON-GDG FLAG ON
         B     BONZO
THATSIT  C     2,=F'01'
         BH    NONE
         B     GENERATE
*OMORE   VTPUT '...and there aint no more.'
NOMORE   EQU   *                                                   JRB
         SR    R15,R15                 LOAD GPR15 WITH CLEAN CC
X        LR    R3,R15                  STORE CC
         LR    R1,R13                  LOAD STORAGE ADDRESS
         L     R13,4(,R13)             POINT TO HIS SAVAREA
         FREEMAIN R,LV=DYNL,A=(1)      FREE VIRTUAL STORAGE
         LR    R15,R3                  RESTORE CC
         LM    R0,R12,20(R13)          RESTORE HIS REGS
         L     R14,12(,R13)            RESTORE GPR14
         BR    14                      RETURN
TELLEM   VTPUT 'You must supply a DSNAME. Try again, please.'
         LH    R15,=H'8'               LOAD GPR15 WITH BAD CC
         B     X
NONE     TM    FLAG,DISP               HAS A DSN BEEN DISPLAYED ?
         BNZ   NOMORE                  IF SO, BRANCH
         MVC   NONEDS,DSAREA           PUT DSNAME INTO MESSAGE
         LA    R1,NONEMSG              POINT TO MESSAGE FOR TPUT
         TPUT  (R1),L'NONEMSG          TELL THE OPERATOR
         LH    R15,=H'4'               LOAD BAD CC
         B     X
OREM     OC    DSAREA(*-*),BLANKS      UPPERCASE 'EM
MOVEM    MVC   0(*-*,5),0(8)           MOVE INPUT PARAMETER TO DSAREA
MOVER    MVC   0(*-*,5),0(8)           MOVE INPUT PARAMETER TO DSAREA
BLANKO   MVC   1(*-*,5),BLANKS
NMSG     DC    CL69'There are no entries for '
BLANKS   DC    44C' '
LOCMOD   CAMLST NAME,0,,0
LOCMODL  EQU   *-LOCMOD
DYN      DSECT
         DS    9D
UGEN     DS    CL16
NONEMSG  DS    CL71                    DSN NOT FOUND MESSAGE       KTB
NONEDS   EQU   NONEMSG+27,44
PGEN     DS    PL8
LOCLIST  CAMLST NAME,0,,0
DSAREA   DS    CL44
         DS    0D
RESULT   DS    CL266
LINE     DS    CL44
LINE2    DS    CL240
FLAG     DS    X                                                   KTB
DISP     EQU   X'80'                   AT LEAST ONE FOUND          KTB
NGDG     EQU   X'40'                   ON IF A NON-GDG             KTB
DYNL     EQU   *-DYN
         END
