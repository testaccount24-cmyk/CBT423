CKC      TITLE 'TSO COMMAND TO REPORT ON REGION REMAINING.'
*%A SERV AC(1) NOTEST ALIGN
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  broidoj@gmail.com                  *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*    TSO command to tell TSO user total storage currently available.  *
*                                                                     *
*                                           BROIDO - 8 APRIL 77       *
*                                                                     *
*    MODIFIED BY:    S. GOLOB   -  JULY 22,2014                       *
*                                                                     *
*                                                                     *
*    SAMPLE OUTPUT:                                                   *
*                                                                     *
*                                                                     *
*           ---  DISPLAY FREE CORE FOR TSO USER  ---                  *
*                ------- ---- ---- --- --- ----                       *
* BYTES AVAILABLE: 00562000 (0005512K) IN SUBPOOL 000, BELOW THE LINE.*
*     STARTING ADDRESS: 00423000                                      *
* BYTES AVAILABLE: 73777000 (1891804K) IN SUBPOOL 000, ABOVE THE LINE.*
*     STARTING ADDRESS: 0BB54000                                      *
*                                                                     *
*                                                                     *
*    CHANGE LOG :                                                     *
*                                                                     *
*      S.GOLOB    -  JULY 22, 2014                                    *
*                                                                     *
*      1.  Included IBM macro YREGS and converted register notation   *
*          to R*.                                                     *
*                                                                     *
*      2.  Hex display of core size was dropping hi-order 2 digits,   *
*          so I corrected that.                                       *
*                                                                     *
*      3.  Added display of start address of available storage.       *
*          (It's there, so show it!)                                  *
*                                                                     *
*      4.  Added title lines.                                         *
*                                                                     *
*      5.  Converted TSO output from TPUT to PUTLINE, so it can be    *
*          trapped and displayed in a scrollable manner.              *
*                                                                     *
***********************************************************************
* ------------------------------------------------------------------- *
         MACRO
.*     --------------------------------------
.*     DISPLAY HEX VALUES IN CHARACTER FORMAT
.*     --------------------------------------
&NAME    HEX   &TO,&LEN,&FROM
&NAME    DS    0H
         ST    R7,SAVER7A               Save area for BAL register
         STM   R15,R1,HEXSAVE           Save work registers
         LA    R1,&FROM                 Load from address
         LA    R0,&LEN                  Load number of chars to move
         LA    R15,&TO                  Load to address
         BAL   R7,HEX                   Go to routine - do the work
         LM    R15,R1,HEXSAVE           Restore work registers
         L     R7,SAVER7A               Restore BAL register
         MEND
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         YREGS
CKC      CSECT
         USING CKC,R15             (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C'CKC - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1977 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)
         LR    R12,R15             LOAD BASE.
         USING CKC,R12
         LA    R2,SAVE
         ST    R2,8(,R13)
         ST    R13,SAVE+4
         LR    R13,R2
INITCON  DS    0H
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         XC    SAV14TO1,SAV14TO1
         STM   R14,R1,SAV14TO1
         APUT  TITLE0,L'TITLE0
         APUT  TITLED,L'TITLED
         LM    R14,R1,SAV14TO1
         L     R2,0(,R1)           POINT TO COMMAND BUFFER.
         SPACE 2
         SR    R4,R4               DEFAULT TO SUBPOOL 0.
         LH    R3,0(,R2)           LOAD TOTAL LENGTH.
         SH    R3,=H'5'            CORRECT LENGTH.
         SH    R3,2(,R2)           CORRECT LENGTH.
         BM    GET                 B IF NO PARM. SUBPOOL 0.
         CH    R3,=H'2'            TOO MUCH SUBPOOL?
         BH    GET                 FORGET IT.
         AH    R2,2(,R2)           POINT ...
         LA    R2,4(,R2)           ... TO PARM.
         XC    WORK(3),WORK
         EX    R3,SPMVZ            MOVE SUBPOOL ZONES.
         EX    R3,SPCLC            NUMERIC?
         BNE   GET                 FORGET IT.
         EX    R3,SPPK             PACK IT.
         CVB   R4,WORK             BINARIZE IT.
         CH    R4,=H'127'          OVER 127?
         BNH   GET                 B IF NOT.
         MODESET KEY=ZERO
GET      DS    0H
         XC    GMANS,GMANS
         GETMAIN  VRC,LV=(X'7FFFFFFF',8),SP=(4) GET UP TO 2 GIGABYTES.
GET1     DS    0H
         XC    GMANS,GMANS
         ST    R1,GMANS            SAVE GOTTEN LOCATION.
         ST    R0,GMANS+4          SAVE LENGTH
         FREEMAIN RU,SP=(4),LV=(0),A=(1)  FREE GOTTEN STORAGE.
         L     R1,GMANS+4          LOAD TOTAL CORE GOTTEN.
         SRL   R1,10               DIVIDE BY 1K.
         CVD   R1,WORK             DECIMALATE.
         UNPK  OUT2,WORK+4(4)      UNPACK TO ANSWER AREA
         OI    OUT2+6,C'0'         FIX THE SIGN
         HEX   OUT1,4,GMANS+4      DISPLAY CORE SIZE IN HEX
         CVD   R4,WORK             DECIMALIZE SUBPOOL.
         UNPK  OUT3,WORK+6(2)      UNPACK IT TO MSG.
         OI    OUT3+2,X'F0'        FIXATE THE SIGNO.
         STM   R14,R1,SAV14TO1     APUT MAY DESTROY SOME REGISTERS
         APUT  OUT,OUTL            OUTPUT THE ANSWER.
         MVI   LINE-1,X'40'        BLANK
         MVC   LINE,LINE-1           THE OUTPUT LINE.
         MVC   LINE(22),STLIT      MOVE IN STARTING ADDRESS LITERAL.
         HEX   LINE+22,4,GMANS     DISPLAY THE STARTING ADDRESS.
         APUT  LINE,40             OUTPUT THE LINE.
         LM    R14,R1,SAV14TO1     RESTORE REGS USED BY APUT.
         TF    EXITFG              SHOULD WE EXIT?
         BO    EXIT                B IF YES.
         MVC   OUT4,=C'ABOVE'      MOVE ABOVE-THE-LINE GRAPHIC.
         GETMAIN  VRC,LV=(X'7FFFFFFF',8),SP=(4),LOC=(ANY,ANY)
         ON    EXITFG              TURN ON EXIT FLAG.
         B     GET1                LOOP.
EXIT     L     R13,SAVE+4          RESTORE CALLER'S SAVE AREA PTR.
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS.
         SR    R15,R15             SET CC = 0.
         BR    R14                 EXIT.
WORK     DS    D
SAVE     DS    9D
         SPACE 1
SPMVZ    MVZ   WORK(*-*),0(R2)
SPCLC    CLC   WORK(*-*),=C'000'
SPPK     PACK  WORK,0(*-*,R2)
         SPACE
FLAG     DC    X'00'               FLAGS.
EXITFG   EQU   FLAG,B'10000000'    EXIT-AFTER-THIS-ITERATION FLAG.
         SPACE
GMANS    DS    2A                  GETMAIN ANSWER AREA.
SAV14TO1 DS    4F                  SAVE REGS USED BY APUT.
SIGNOFF  DC    X'0000000F'
         DC    C' '
LINE     DS    CL80
OUT      DC    C'BYTES AVAILABLE: '
OUT1     DC    C'XXXXXXXX',C' ('
OUT2     DC    C'XXXXXXX',C'K) IN SUBPOOL '
OUT3     DC    C'XXX',C', '
OUT4     DC    C'BELOW',C' THE LINE.'
OUTL     EQU   *-OUT
STLIT    DC    C'    STARTING ADDRESS: '
HEXTAB   DC    C'0123456789ABCDEF'
TITLE0   DC    C'          ---  DISPLAY FREE CORE FOR TSO USER  ---   '
TITLED   DC    C'               ------- ---- ---- --- --- ----        '
HEXSAVE  DS    3F                     For HEX routine - save regs
SAVER7A  DS    F                      Save R7 during BAL
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      MVC   1(1,R15),0(R1)         Move byte
         UNPK  0(3,R15),1(2,R15)      Unpack
         TR    0(2,R15),HEXTAB-240    Translate
         LA    R15,2(,R15)            Increment output pointer
         LA    R1,1(,R1)              Increment input pointer
         BCT   R0,HEX                 Decrement length, then loop
         MVI   0(R15),C' '            Blank the trailing byte
         BR    R7                     Return to caller
         SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         LTORG
         END   CKC
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
