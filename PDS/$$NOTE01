***********************************************************************
*                                                                     *
*     LISTHEAD - TSO command to list the eye-catcher, if any, in      *
*           the entry point CSECT of a load module in the normal      *
*           search path.                                              *
*                                                                     *
*           Modified to list more non-standard eye catchers. (SG)     *
*                                                                     *
*     Register usage:                                                 *
*           R5 - WORK.                                                *
*           R6 - Work.                                                *
*           R7 - Work.                                                *
*           R8 - Work.                                                *
*           R9 - Work, Parse PDEs.                                    *
*          R10 - CPPL pointer.                                        *
*          R12 - Base.                                                *
*                                                                     *
*                               Jeffrey R. Broido                     *
*                               25 April 2001                         *
*                                                                     *
*                               Modified by S.Golob  -  4/10          *
*                               Modified by Updater  -  7/14          *
*                                                                     *
*     Change History (of sorts):                                      *
*                                                                     *
*        The original purpose of this program seems to have been,     *
*        to display standard IBM headers in their load modules.       *
*        Traditionally, an IBM-written load module would begin        *
*        with an unconditional branch instruction X'47F0' that        *
*        would branch over a standard-looking eyecatcher which        *
*        told you the name of the module, and its release or PTF      *
*        level.  These headers seem to be what the author of          *
*        this program wanted to display.  ONLY THOSE HEADERS and      *
*        no others.                                                   *
*                                                                     *
*        But things have changed in the IBM world, and the load       *
*        modules which IBM produces, have fully reflected these       *
*        changes.                                                     *
*                                                                     *
*        There are now other instructions which do unconditional      *
*        branches, besides the BC instruction (whose unconditional    *
*        format is X'47F0').  There are JUMP instructions and LARL    *
*        instructions, and there are also BAKR and PR combinations.   *
*        IBM uses all of these, and therefore, this program must      *
*        change to reflect all of this new stuff from IBM.            *
*                                                                     *
*        The program works (currently) by issuing a LOAD macro        *
*        against the entry point of the desired load module, and      *
*        it searches the first few bytes of the loaded module,        *
*        to see what is there.  If there are branch or jump           *
*        instructions, then the program displays what was branched    *
*        or jumped over.  For diagnosis purposes, if you need to      *
*        investigate near the beginning of any module entry point,    *
*        you can activate the option described in the previous        *
*        paragraph.                                                   *
*                                                                     *
*        If a load module contains multiple modules, each with its    *
*        own header, these are not displayed.  Only the entry point   *
*        header is displayed.                                         *
*                                                                     *
*        Sometimes a program is coded with comments at the beginning  *
*        and the entry point, off the beginning, points to a BAKR     *
*        instruction, or something similar, with the (non-executable) *
*        comments at the beginning.  The LOAD macro does not return   *
*        the address of these comments, and at the present time       *
*        therefore, they cannot be displayed.  If the entry point     *
*        is a BAKR instruction, the program was changed to say so.    *
*        Hope this helps a bit more than before.  (SBG - June 2014)   *
*                                                                     *
*        Updated by Updater (July 20, 2014):                          *
*        Process now adjusted to load the entire module, even if the  *
*        entry point is not at the beginning.  This takes care of     *
*        "almost normal" modules from SYS1.VTAMLIB and such, with     *
*        the entry point just AFTER the eyecatcher.  The command      *
*        previously would not therefore show such an eyecatcher.      *
*        So the command was modified to find the address at the       *
*        beginning of the module, even if the entry point officially  *
*        was later.  If you want to display the entry point alone,    *
*        then use the ENTRY keyword after the module name:            *
*                                                                     *
*                 example:    LISTHEAD modname ENTRY                  *
*                                                                     *
*        Suggestion:  To see the hex values in the first bytes of     *
*         the header, use a SYSOUTTRAP tool to EDIT or VIEW the       *
*         output of this command, such as the TSOV tool from CBT      *
*         File 434 (from Mark Zelden):  Do as follows:                *
*                                                                     *
*                 TSO TSOV LISTHEAD modname ENTRY                     *
*                                                                     *
*         and put HEX mode on, in ISPF.                               *
*                                                                     *
*         For some modules, such as IEBCOPY, you have to use the      *
*         ENTRY parameter to get a realistic eyecatcher.  You'll      *
*         have to try both ways with some modules, to see which       *
*         way shows the beginning of the module more realistically.   *
*                                                                     *
***********************************************************************
