HEXPGM TITLE 'HEXPGM - INPUT HEX, OUTPUT TO 327X IN ANY MODE VIA TPUT'
*%A PPLINK NOTEST
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  broidoj@gmail.com                  *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*     HEXPGM - TEST COMMAND TO TAKE TERMINAL INPUT IN HEX CODED       *
*           BINARY, AND OUTPUT TO THE TERMINAL IN ANY TPUT MODE.      *
*                                                                     *
*   Modifications:                                                    *
*                                                                     *
*   2018/02/14 -  S.Golob                                             *
*   0.  Change title to HEXPGM so as not to interfere with other      *
*         programs.  (Originally it was called HEX.)                  *
*   1.  Provide more "escape routes":  BYE, QUIT, END, besides /*     *
*   2.  Allow question mark "?" as HELP.                              *
*       (HELP shows the terminal control modes.)                      *
*   3.  Abbreviate HELP to HEL and HE.                                *
*   4.  Add to program title display, at initial execution,           *
*       to better explain the program's purpose to the user.          *
*                                                                     *
***********************************************************************
         SPACE 3
HEXPGM   CSECT
         REGS
         USING HEXPGM,R15          (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C' HEXPGM - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1979 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)
         USING HEXPGM,R12
         LR    R12,R15
         LA    R2,SAVE
         ST    R2,8(,R13)
         ST    R13,SAVE+4
         LR    R13,R2
         ST    R12,BSAVE           SAVE BASE.
         SPACE 1
         MVI   TOPT,X'34'
         VTPUT 'Interpret HEX characters and write them to the'
         VTPUT '  terminal in any of several modes. '
         VTPUT '  Enter  ? or HElp         for help.'
         VTPUT '  /*, BYE, QUIT, or END     to exit.'
         VTPUT '   '
         VTPUT 'Enter HEX characters, COMMAND, HELP, /* TO EXIT.'
LUP      TGET  BUFFER,L'BUFFER     GET BUFFER FULL OF HEX.
         OC    BUFFER(8),=CL8' '   Uppercase....
         LTR   R2,R1               EMPTY?
         BNZ   NOTEMPTY            B IF NO.
         TM    FLAG,VALID          BUFFER IS VALID?
         BZ    LUP                 B IF YES.
         B     TPUT                OUTPUT IT.
NOTEMPTY DS    0H
         CLC   =C'?',BUFFER        DO WE WANT HELP?
         BE    HELTEXT             PUT OUT HELP INSTRUCTIONS
         CLC   =C'BYE',BUFFER      PROVIDE
         BE    END                   MORE
         CLC   =C'END',BUFFER          ESCAPE
         BE    END                       ROUTES
         CLC   =C'QUIT',BUFFER             ******
         BE    END                           ******
* --------------------------------------------------------------- *
*  At this point, we do not want to allow one hexadecimal digit.  *
* --------------------------------------------------------------- *
         CH    R1,=H'2'            COMPARE TO 2. HEX NUMBERS LENGTH=2.
         BL    INVPARM             ERROR IF LEN 1.
         BH    SPECIAL             CHECK SPECIAL COMMANDS.
         CLC   =C'/*',BUFFER       LEN = 2; CHECK FOR END.
         BE    END                 B IF END.
SPECIAL  CLC   =C'ASIS',BUFFER     ASIS?
         BNE   NOTASIS             B IF NOT.
         NI    TOPT,X'FC'          SET ...
         OI    TOPT,X'01'          ASIS.
         VTPUT '"ASIS" output mode set.'
         B     LUP                 GET NEW INPUT.
NOTASIS  CLC   =C'CONTROL',BUFFER  CONTROL?
         BNE   NOTCNTL             B IF NOT.
         NI    TOPT,X'FC'          SET...
         OI    TOPT,X'02'          ... CONTROL.
         VTPUT '"CONTROL" output mode set.'
         B     LUP                 GET NEW INPUT.
NOTCNTL  CLC   =C'FULLSCR',BUFFER  FULLSCREEN?
         BNE   NOTFULL             B IF NOT.
         OI    TOPT,X'03'          SET FULLSCR.
         VTPUT '"FULLSCR" output mode set.'
         B     LUP                 GET NEW INPUT.
NOTFULL  CLC   =C'NORMAL',BUFFER   NORMAL?
         BNE   NOTNORM             B IF NOT.
         NI    TOPT,X'FC'          SET NORMAL OUTPUT MODE.
         VTPUT '"NORMAL" output mode set.'
         B     LUP                 GET NEW INPUT.
NOTNORM  CLC   =C'USER ',BUFFER    DIRECTED OUTPUT?
         BNE   NOTUSER             B IF NOT.
         CLI   BUFFER+5,C'*'       USER YOU?
         BNE   U0                  B IF NOT.
         NI    FLAG,X'FF'-USER     RESET FLAG.
         VTPUT 'User reset to you.'
         B     LUP                 LOOP.
U0       MVC   USERID,BUFFER+5     UNSOPHISTICATED MOVE.
         OC    USERID,=CL8' '      UPPERCASE IT.
         OI    FLAG,USER           SET FLAG.
         MVC   UM1,USERID          MOVE USERID.
         TPUT  M1,M1L              SAY: USER RESET TO XXXXXXXX.
         B     LUP                 LOOP.
NOTUSER  CLC   =C'POP',BUFFER      POP?
         BNE   NOTPOP              NO.
         OI    FLAG,POP            SET POP FLAG.
         VTPUT 'Pop it is.'        OY.
         B     LUP                 LOOP.
NOTPOP   CLC   =C'HELP',BUFFER     HELP?
         BE    HELTEXT             B IF NOT.
         CLC   =C'HEL',BUFFER      ABBREVIATE 'HELP'
         BE    HELTEXT
         CLC   =C'HE',BUFFER       ABBREVIATE 'HELP'
         BE    HELTEXT
         B     CONVERT
HELTEXT  DS    0H
         VTPUT 'Enter:  /* to exit.'
         VTPUT '        FULLSCR for fullscr mode.'
         VTPUT '        NORMAL for normal mode.'
         VTPUT '        ASIS for asis mode.'
         VTPUT '        CONTROL for control mode.'
         B     LUP
CONVERT  BCTR  R1,*-*              CREATE SS LENGTH
         EX    R1,TRANSLAT         TRANSLATE BUFFER
         LA    R1,BUFFER           POINT TO BUFFER.
         LR    R3,R1               COPY POINTER.
         SR    R4,R4               CLEAR VALID CHARACTER COUNTER.
CONLUP   CLI   0(R1),X'FF'         VALID CHARACTER?
         BE    CONBUMP             B IF NOT.
         MVC   0(1,R3),0(R1)       MOVE A CHARACTER.
         LA    R3,1(,R3)           BUMP OUTPUT POINTER.
         LA    R4,1(,R4)           BUMP COUNTER.
CONBUMP  LA    R1,1(,R1)           BUMP INPUT POINTER.
         BCT   R2,CONLUP           CHECK ANOTHER CHARACTER.
         LTR   R4,R4               ANYTHING VALID?
         BZ    INVPARM             B IF NOT.
         EX    R4,TESTEVEN         EVEN NUMBER OF CHARACTERS?
         BNO   INVPARM             B IF NOT.
         LA    R9,BUFFER           POINT TO BUFFER.
         LA    R10,BUFFOUT         POINT TO OUTPUT.
         SRL   R4,1                CREATE OUTPUT LENGTH
         LR    R5,R4               TRANSFER LENGTH.
PLUP     IC    R1,0(,R9)           LOAD EVEN CHARACTER.
         SLL   R1,4                SHIFT TO HIGH BYTE.
         EX    R1,OR               OR IT WITH NEXT BYTE.
         MVC   0(1,R10),1(R9)      MOVE CHAR TO OUTPUT.
         LA    R9,2(,R9)           BUMP INPUT.
         LA    R10,1(,R10)         BUMP OUTPUT.
         BCT   R5,PLUP             LOOP.
         OI    FLAG,VALID          VALIDATE BUFFOUT.
TPUT     TM    FLAG,USER           DIRECTED OUTPUT?
         BO    TPUT0               B IF YES.
         NI    TOPT,X'BF'          OFF TOPT USERIDL FLAG.
         B     TPUT1               CONT.
TPUT0    OI    TOPT,X'40'          ON TOPT USERIDL FLAG.
         LA    R15,USERID          POINT TO USERID.
TPUT1    TPUT  BUFFOUT,(R4),ASIS   OUTPUT IN BINARY.
TOPT     EQU   *-12                TPUT OPTION FLAG (WATCH IT!).
         LTR   R15,R15             ALL OK?
         BNZ   TPUT2               B IF YES.
         TM    FLAG,POP            SHALL WE POP?
         BZ    LUP                 NOPE.
         XC    ECB,ECB             CLEAR ECB.
         LA    R1,STAXLIST         SET ...
         STAX  ATTNEXIT,MF=(E,(1)) ... ATTN EXIT.
         STIMER REAL,TEXIT,BINTVL=INT    WAIT.
         WAIT  ECB=ECB
         TM    ECB+2,1             POSTED BY TIMER EXIT?
         BO    TPUT                YES. OUTPUT IT AGAIN.
         STAX  ,                   NO. CANCEL STAX.
         B     LUP                 GET ANOTHER CMD.
TPUT2    MVC   UM2,USERID          MOVE USERID.
         TPUT  M2,M2L              SAY: XXXXXXXX NOT AT HOME.
         NI    FLAG,X'FF'-USER-POP RESET USER OPTION.
         B     LUP                 CONT.
INVPARM  VTPUT 'INVALID PARM.'
         B     LUP                 GET ANOTHER BUFFER.
END      VTPUT 'BYE!'
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         SPACE 1
         USING *,R15
ATTNEXIT L     R12,BSAVE           RELOAD BASE.
         LR    R5,R14              PRESERVE RTN.
         DROP  R15
         NI    FLAG,X'FF'-POP      OFF POP FLAG.
         POST  ECB                 POST THE ECB.
         BR    R5                  RETURN.
         USING *,R15
TEXIT    L     R12,BSAVE
         DROP  R15
         LR    R5,R14
         POST  ECB,1               POST ECB WITH SPECIAL CODE.
         BR    R5
SAVE     DS    9D
BSAVE    DS    A                   BASE SAVE AREA FOR STAX.
BUFFER   DS    CL255               INPUT BUFFER.
BUFFOUT  DS    CL128               OUTPUT BUFFER
USERID   DS    CL8                 USERID FOR DIRECTED TPUT.
         SPACE 1
FLAG     DC    X'00'               FLAGS.
VALID    EQU   B'10000000'         BUFFER IS VALID.
USER     EQU   B'01000000'         DIRECTED TPUT.
POP      EQU   B'00100000'         POP FLAG.
         SPACE 1
ECB      DS    F                   ECB FOR STAX, TIMER.
INT      DC    F'1000'             10 SECOND POP RATE.
OR       OI    1(R9),*-*           * EXECUTED *
TRANSLAT TR    BUFFER(*-*),TAB     * EXECUTED *
TESTEVEN TM    =X'FE',*-*          * EXECUTED *
M1       DC    C'User set to '
UM1      DC    CL8' '
M1L      EQU   *-M1
M2       EQU   *
UM2      DC    CL8' ',C'no longer at home.  Reset to you.'
M2L      EQU   *-M2
STAXLIST STAX  ATTNEXIT,MF=L
         SPACE 1
TAB      DC    256X'FF'            TRANSLATE TABLE
         ORG   TAB+X'81'
         DC    X'0A0B0C0D0E0F'
         ORG   TAB+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TAB+C'0'
         DC    X'00010203040506070809'
         ORG
         END
