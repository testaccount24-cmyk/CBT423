DUMPV    TITLE 'DUMPS CLIST VARIABLES.'
*%A PPLINK NOTEST AMODGEN
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  broidoj@gmail.com                  *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        DUMPV - A utility for authors of CLISTs and/or REXX execs.   *
*                Executed as a TSO command with no operands, DUMPV    *
*                lists all variables and their contents excepting     *
*                variables which cannot be evaluated.                 *
*                                                                     *
*                                  Jeffrey  R.  Broido                *
*                                  20   December  1991                *
*                                  @SP/RCC, Kenilworth                *
*                                                                     *
*        Operands:     None.                                          *
*        Return codes:  0 - Normal.                                   *
*                       8 - Not run under CLIST or REXX exec.         *
*                      16 - Not run as a TSO command.                 *
*                                                                     *
*        Registers:    12 - Base.                                     *
*                       4 - Address of IKJCT441.                      *
*                                                                     *
***********************************************************************
         SPACE 1
DUMPV    CSECT
DUMPV    AMODE 31
         REGS
         USING DUMPV,R15           (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C' DUMPV - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1992 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             COPY BASE.
         USING DUMPV,R12           (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R13,8(,R14)         CHAIN ...
         ST    R14,4(,R13)         ... AREAS.
         ST    R1,SAVE             PRESERVE CPPL POINTER.
         SPACE 1
         L     R4,X'10'            POINT TO CVT.
         USING CVT,R4              (TELL ASM)
         MVC   PUTLADDR,CVTPUTL    COPY ADDRESS OF PUTLINE ROUTINE.
         L     R4,CVTTVT           PONT TO THE TSVT.
         USING TSVT,R4             (TELL ASM).
         L     R4,TSVTVACC         POINT TO IKJCT441 (CLIST ...
*                                  ... AND REX VARIABLE ACCESS RTN).
         L     R1,SAVE             RELOAD CPPL POINTER.
         LTR   R1,R1               IS THERE THE POSSIBILITY OF A CPPL?
         BNZ   CKCBUF              B IF YES.
NOTCMD   VTPUT 'DUMPV must run directly as a TSO command.'
         LA    R15,16              SET CC OF 16.
         B     EXIT                EXIT.
         USING CPPL,R1
CKCBUF   ICM   R14,X'F',CPPLCBUF   POINT TO SUPPOSED COMMAND BUFFER.
         BZ    NOTCMD              B IF POINTER IS ZERO.  NOT CPPL.
         CLC   =H'4',0(R14)        IS LENGTH < 4?
         BH    NOTCMD              B IF YES.  NOT CPPL.
         CLI   2(R14),X'00'        POSSIBLE OFFSET?
         BNE   NOTCMD              B IF NOT.  NOT CPPL.
CPPLOK   MVC   IOPLUPT,CPPLUPT     INITIALIZE ...
         MVC   IOPLECT,CPPLECT     ... PUTLINE IOPL.
         DROP  R1
*                                  ... VARIABLE ACCESS ROUTINE).
LOOP     LR    R15,R4              POINT TO VARIABLE ACCESS ROUTINE.
         LA    R1,PARM441          POINT TO VARIABLE ACCESS RTN PARMS.
         BALR  R14,R15             CALL VARIABLE ACCESS ROUTINE.
         LR    R8,R15              PRESERVE RETURN CODE.
         CH    R8,=H'40'           IS CALL FROM WITHIN CLIST OR REXX?
         BNE   CLISTOK             B IF ENVIRONMENT IS OK.
         L     R15,PUTLADDR        POINT TO IKJPUTL.
         LA    R2,NPMSG0           POINT TO NO-PURPOSE MESSAGE.
         PUTLINE OUTPUT=((R2),DATA),ENTRY=(15),MF=(E,IOPL) SEND LINE.
* SAY: DUMPV SERVES NO PURPOSE UNLESS YOU''RE RUNNING UNDER A CLIST.
         LA    R15,8               SET CC = 8.
         B     EXIT                EXIT.
CLISTOK  CH    R8,=H'20'           ARE THERE NO MORE VARIABLES?
         BE    EXIT0               EXIT IF THERE ARE NO MORE.
         CH    R8,=H'8'            VARIABLE REQUIRES EVALUATION?
         BE    LOOP                IGNORE IT IF YES.
         CH    R8,=H'12'           VARIABLE IS A LABEL?
         BE    LOOP                IGNORE IT IF YES.
         CH    R8,=H'24'           VARIABLE IS A PROC NAME?
         BE    LOOP                IGNORE IT IF YES.
DONAME   MVI   OUTNAME+1,C' '                   CLEAR ...
         MVC   OUTNAME+2(L'OUTNAME-2),OUTNAME+1 ... NAME AREA.
         L     R1,NAMEPTR          POINT TO VARIABLE NAME.
         L     R15,NAMELEN         LOAD LENGTH OF NAME.
         BCTR  R15,*-*             GENERATE SS LENGTH.
         CH    R15,=AL2(L'OUTNAME-1) WILL NAME FIT?
         BNH   NLOK                B IF YES.
         LA    R15,L'OUTNAME-4     CHANGE TO TRUNCATED LENGTH.
         EX    R15,MVNAME          MOVE NAME TO OUTPUT AREA.
*      ( MVC   OUTNAME(*-*),0(R1)  )
         MVC   OUTNAME+L'OUTNAME-3(3),=C'...' MOVE TRUNC. INDICATOR.
         B     DOVAL
NLOK     EX    R15,MVNAME          MOVE NAME TO OUTPUT AREA.
*      ( MVC   OUTNAME(*-*),0(R1)  )
         LA    R1,OUT+1(R15)       BUMP PAST NAME.
*        MVI   0(R1),C':'          MOVE COLON TO END OF NAME.
DOVAL    L     R1,VALUEPTR         POINT TO VARIABLE VALUE, IF ANY.
         ICM   R15,X'F',VALUELEN   IS VALUE NULL?
         BNZ   VNOTNULL            B IF NOT.
         LA    R15,NULLLEN         LOAD LENGTH OF "NULL" GRAPHIC.
         LA    R1,NULLVAL          POINT TO "NULL" GRAPHIC.
VNOTNULL BCTR  R15,*-*             GENERATE SS LENGTH OF VALUE.
         CH    R15,=AL2(L'OUTVAL-1) WILL VALUE FIT?
         BNH   VLOK                B IF YES.
         LA    R15,L'OUTVAL-4      CHANGE TO TRUNCATED LENGTH.
         EX    R15,MVVAL           MOVE VALUE TO OUTPUT AREA.
*      ( MVC   OUTVAL(*-*),0(R1)   )
         MVC   OUTVAL+L'OUTVAL-3(3),=C'...'
         LA    R15,3(,R15)         BUMP LENGTH TO ACCOUNT FOR "..."
         B     PUT                 CONTINUE.
VLOK     EX    R15,MVVAL           MOVE VALUE TO OUTPUT AREA.
*      ( MVC   OUTVAL(*-*),0(R1)   )
PUT      LA    R14,L'OUTNAME+L'OUTFILL+1(R15) LOAD TOTAL LENGTH.
         LA    R14,4(,R14)         ADD RDW TO LENGTH.
         STH   R14,OUT0            SAVE LENGTH IN RDW.
         LA    R2,OUT0             POINT TO OUTPUT AREA.
         L     R15,PUTLADDR        POINT TO IKJPUTL.
         PUTLINE OUTPUT=((R2),DATA),ENTRY=(15),MF=(E,IOPL) SEND LINE.
         MVC   VALUEPTR,=A(NULLVAL) RESET VALUE TO NULL IN CASE ...
         MVC   VALUELEN,=A(NULLLEN) ... NEXT CALL RETURNS NO VALUE.
         B     LOOP
EXIT0    SR    R15,R15             SET CC OF 0.
EXIT     L     R13,SAVE+4          POINT TO CALLER'S SAVE AREA.
         LM    R0,R12,12(R13)      RELOAD CALLER'S REGISTERS.
         L     R14,12(,R13)        RELOAD RETURN ADDRESS.
         BR    R14                 RETURN TO CALLER.
         DROP  R4
MVNAME   MVC   OUTNAME(*-*),0(R1)  *** EXECUTED ***
MVVAL    MVC   OUTVAL(*-*),0(R1)   *** EXECUTED ***
         TITLE '- DATA AREAS.'
SAVE     DS    9D                  MAIN SAVE AREA.
NAMEPTR  DS    A                   CLIST VARIABLE NAME POINTER.
NAMELEN  DS    F                   CLIST VARIABLE LENGTH.
VALUEPTR DS    A                   CLIST VARIABLE VALUE POINTER.
VALUELEN DS    F                   CLIST VARIABLE VALUE LENGTH.
NULLVAL  DC    C'< Null >'         NULL VARIABLE GRAPHIC.
NULLLEN  EQU   *-NULLVAL
         SPACE 1
PTPB0    PUTLINE OUTPUT=(OUT0,DATA),MF=L
IOPL     DS    0A                  IOPL FOR PUTLINE.
IOPLUPT  DC    A(0)                POINTER TO UPT.
IOPLECT  DC    A(0)                POINTER TO ECT.
IOPLECB  DC    A(PUTECB)           POINTER TO ECB.
IOPLIOPB DC    A(PTPB0)            POINTER TO PTPB.
PUTECB   DC    A(0)                ECB FOR USE BY PUTLINE.
PUTLADDR DS    A                   ADDRESS OF PUTLINE ROUTINE.
         SPACE 1
NPMSG0   DS    0A                  NO-PURPOSE MESSAGE.
         DC    AL2(NPMSGLEN,0)     HEADER.
         DC    C'DUMPV serves no purpose unless you''re running '
         DC    C'under a CLIST or REXX exec.'
NPMSGLEN EQU   *-NPMSG0            LENGTH OF MESSAGE.
         SPACE 1
OUT0     DS    0A                  OUTPUT BUFFER FOR NAME LIST MODE.
         DC    AL2(OUTLEN,0)       OUTPUT HEADER.
OUT      DS    0C                  OUTPUT BUFFER.
OUTNAME  DC    CL15' '             OUTPUT VARIABLE NAME.
OUTFILL  DC    C' '                OUTPUT SPACER.
OUTVAL   DC    CL63' '             OUTPUT VARIABLE CONTENTS.
OUTLEN   EQU   *-OUT0              LENGTH OF OUTPUT BUFFER.
         SPACE 1
PARM441  CALL  ,(ECODE,NAMEPTR,NAMELEN,VALUEPTR,VALUELEN,TOKEN),       +
               VL,MF=L             PARM LIST FOR IKJCT441.
         SPACE 1
IDATE    DC    PL3'00',X'000000'
TOKEN    DC    A(0)                TOKEN FOR MULTIPLE CALLS.
ECODE    DC    A(TSVELOC)          ENTRY CODE: RETURN ALL VARIABLES.
         TITLE '- MAPPING DSECT MACROS.'
         PRINT NOGEN
         IKJTSVT
         CVT   DSECT=YES
         IKJCPPL
         END
