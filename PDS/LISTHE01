LISTHEAD TITLE '- TSO command to list load module eye-catchers.'
         SPACE 1
LISTHEAD AMODE 31
LISTHEAD RMODE ANY
LISTHEAD CSECT
         SPACE 1
***********************************************************************
*                                                                     *
*        LISTHEAD - TSO command to list the eye-catcher, if any, in   *
*              the entry point CSECT of a load module in the normal   *
*              search path.                                           *
*                                                                     *
*              Modified to list more non-standard eye catchers. (SG)  *
*                                                                     *
*        Register usage:                                              *
*              R5 - WORK.                                             *
*              R6 - Work.                                             *
*              R7 - Work.                                             *
*              R8 - Work.                                             *
*              R9 - Work, Parse PDEs.                                 *
*             R10 - CPPL pointer.                                     *
*             R12 - Base.                                             *
*                                                                     *
*                                  Jeffrey R. Broido                  *
*                                  25 April 2001                      *
*                                                                     *
*                                  Modified by S.Golob  -  4/10       *
*                                                                     *
***********************************************************************
         SPACE 1
         YREGS
         USING LISTHEAD,R15        (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C'LISTHEAD - &SYSDATE - &SYSTIME  '
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             COPY BASE.
         USING LISTHEAD,R12        (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R14,SAVE+4          CHAIN ...
         ST    R13,8(,R14)         ... SAVE AREAS.
         SPACE 1
         LR    R10,R1              PRESERVE CPPL POINTER.
         USING CPPL,R10            (TELL ASSEMBLER)
         SPACE 1
***********************************************************************
*                                                                     *
*        INITIALIZE THE IOPL FOR PUTLINE.                             *
*                                                                     *
***********************************************************************
         SPACE 1
         MVC   IOPLUPT,CPPLUPT     COPY UPT ADDRESS.
         MVC   IOPLECT,CPPLECT     COPY ECT ADDRESS.
         SPACE 1
***********************************************************************
*                                                                     *
*        Initialize the Parse Parameter List and call TSO Parse.      *
*                                                                     *
***********************************************************************
         SPACE 1
         MVC   PPLUPT,CPPLUPT      COPY UPT ADDRESS.
         MVC   PPLECT,CPPLECT      COPY ECT ADDRESS.
         MVC   PPLCBUF,CPPLCBUF    COPY COMMAND BUFFER ADDRESS.
         SPACE 1
         LA    R1,PPL              POINT TO THE PPL.
         XC    ECB,ECB             CLEAR ECB.
         CALLTSSR EP=IKJPARS       PARSE INPUT.
         L     R9,ANS              POINT TO PDES.
         USING PDL,R9              TELL ASSEMBLER.
         LH    R1,PDLLM+4          LOAD LENGTH OF LOAD MODULE NAME.
         BCTR  R1,*-*              DECREMENT LENGTH.
         L     R15,PDLLM           POINT TO RETURNED MEMBER NAME.
         EX    R1,MVMEM            COPY MEMBER NAME FROM PDL
*      ( MVC   MEMBER(*-*),0(R15)  )
FREEPDES IKJRLSA ANS               FREE THE PDES.
         SPACE 1
***********************************************************************
*                                                                     *
*        Fetch the user-specified load module.                        *
*                                                                     *
***********************************************************************
         SPACE 1
LOAD0    LOAD  EPLOC=MEMBER,ERRET=LOAD1  FETCH LOAD MODULE TO LIST.
LOAD1    LTR   R15,R15             WAS LOAD SUCCESSFUL?
         BZ    LOAD2               B IF YES; CONTINUE.
         XC    ECB,ECB             CLEAR ECB.
         PUTLINE OUTPUT=(MSG002,,DATA),MF=(E,IOPL)
*              SAY: CANNOT LOAD MEMBER.
         LA    R15,8               SET CC = 8.
         B     EXIT                EXIT.
LOAD2    LR    R9,R0               POINT TO LOAD MODULE TO BE LISTED.
         CLC   =X'47F0',0(R9)      POSSIBLY STANDARD HEADER?
         BE    LOAD3               B IF YES; CONTINUE.
         CLC   =X'05F047F0',0(R9)  POSSIBLY STANDARD HEADER?
         BNE   NONSTD              B IF NOT.  ERROR.
         LA    R9,2(,R9)           BUMP LOAD MODULE ORIGIN.
         B     LOAD3               CONTINUE.
NONSTD   XC    ECB,ECB             CLEAR ECB.
         PUTLINE OUTPUT=(MSG001,,DATA),MF=(E,IOPL)
*              SAY: LOAD MODULE HAS NON-STANDARD HEADER.
         LA    R15,4               SET CC = 4.
         B     EXIT                EXIT.
LOAD3    SR    R8,R8               CLEAR INSERT REGISTER AND ...
         ICM   R8,B'0001',4(R9)    ... LOAD HEADER LENGTH.
         BZ    LOAD4               B IF BYTE LENGTH IS ZERO.
         LA    R7,5(,R9)           POINT TO HEADER.
LOAD5    LR    R6,R8               COPY LENGTH.
         BCTR  R8,*-*              DECREMENT LENGTH.
         EX    R8,TRT              CHECK FOR PRINTABLE CHARACTERS.
*      ( TRT   0(*-*,R7),TRTAB     )
         BZ    HEADOUT             CONTINUE IF ALL PRINTABLE.
         SR    R8,R8               CLEAR INSERT REGISTER AND ...
         IC    R8,3(,R9)           ... LOAD DISP. TO FIRST SIG. INST.
         LA    R7,4(,R9)           POINT TO FIRST CHAR. AFTER BRANCH.
         SH    R8,=H'5'            DECREMENT LENGTH.
         LA    R6,1(,R8)           INCREMENT LENGTH.
         EX    R8,TRT              CHECK FOR PRINTABLE CHARACTERS.
*      ( TRT   0(*-*,R7),TRTAB     )
*        BNZ   NONSTD              B IF ANY NON-PRINTABLE CHARS.
HEADOUT  LA    R6,4(,R6)           BUMP LENGTH FOR RDW-OID.
         STORAGE OBTAIN,LENGTH=(R6) GET PUTLINE BUFFER.
         LR    R5,R1               PRESERVE ADDRESS POINTER.
         STH   R6,0(,R5)           SAVE LENGTH FOR PUTLINE.
         XC    2(2,R5),2(R5)       ZERO OFFSET FOR PUTLINE.
         EX    R8,MVHEAD           MOVE HEADER TO PUTLINE BUFFER.
*      ( MVC   4(*-*,R5),0(R7)     )
         XC    ECB,ECB             CLEAR ECB.
         PUTLINE OUTPUT=((R5),,DATA),MF=(E,IOPL) OUTPUT HEADER.
         STORAGE RELEASE,LENGTH=(R6),ADDR=(R5) FREE PUTLINE BUFFER.
         B     EXIT0               EXIT WITH CC = 0.
LOAD4    LH    R8,4(,R9)           LOAD HALFWORD LENGTH.
         LA    R7,6(,R9)           POINT TO HEADER.
         B     LOAD5               CONTINUE.
EXIT0    SR    R15,R15             SET CC = 0.
EXIT     L     R13,SAVE+4          POINT TO CALLER'S SAVE AREA.
         LM    R0,R12,20(R13)      RELOAD MOST OF CALLER'S REGISTERS.
         L     R14,12(,R13)        RELOAD RETURN ADDRESS.
         BR    R14                 RETURN TO CALLER.
         TITLE '- Static data area.'
SAVE     DS    9D                  SAVE AREA.
         SPACE 1
IOPL     DS    0A                  IOPL FOR PUTLINE.
IOPLUPT  DS    A                   POINTER TO USER PROFILE TABLE.
IOPLECT  DS    A                   POINTER TO ENVIRONMENT CONTROL TAB.
IOPLECB  DC    A(ECB)              POINTER TO ECB.
IOPLIOPB DC    A(PTPB)             POINTER TO PTPB.
         SPACE 1
         SPACE 1
PTPB     PUTLINE MF=L PUTLINE PARM. BLOCK.
         SPACE 1
MVMEM    MVC   MEMBER(*-*),0(R15)  *** EXECUTED ***
MVHEAD   MVC   4(*-*,R5),0(R7)     *** EXECUTED ***
TRT      TRT   0(*-*,R7),TRTAB     *** EXECUTED ***
         SPACE 1
TRTAB    DC    256X'01'            TRT TABLE TO DETECT ...
         ORG   TRTAB+C'a'          ... NON-DISPLAY CHARACTERS.
         DC    9X'00'
         ORG   TRTAB+C'j'
         DC    9X'00'
         ORG   TRTAB+C's'
         DC    8X'00'
         ORG   TRTAB+C'A'
         DC    9X'00'
         ORG   TRTAB+C'J'
         DC    9X'00'
         ORG   TRTAB+C'S'
         DC    8X'00'
         ORG   TRTAB+C'0'
         DC    10X'00'
         ORG   TRTAB+X'4A'
         DC    7X'00'
         ORG   TRTAB+C'!'
         DC    8X'00'
         ORG   TRTAB+X'6A'
         DC    6X'00'
         ORG   TRTAB+C':'
         DC    6X'00'
         ORG   TRTAB+X'AF'
         DC    18X'00'
         ORG   TRTAB+C'\'
         DC    2X'00'
         ORG   TRTAB+C' '
         DC    X'00'
         ORG   ,
         SPACE 1
         LTORG
         TITLE '- MESSAGES.'
MSG001   DC    AL2(MSG001L,0),C'Load module has non-standard header.'
MSG001L  EQU   *-MSG001
         space 1
MSG002   DC    AL2(MSG002L,0),C'Cannot load '
MEMBER   DC    CL8' '              NAME OF MEMBER TO BE EXAMINED.
         DC    C' from any library in normal search path.'
MSG002L  EQU   *-MSG002
         TITLE '- Parse parameters.'
PPL      DS    0A                  PARSE PARM LIST.
PPLUPT   DS    A                   POINT TO UPT.
PPLECT   DS    A                   POINT TO ECT.
PPLECB   DC    A(ECB)              POINT TO ECB.
PPLPCL   DC    A(PCL)              POINT TO PCL.
PPLANS   DC    A(ANS)              POINT TO ANSWER PLACE.
PPLCBUF  DS    A                   POINT TO COMMAND BUFFER.
PPLWA    DC    A(0)                NO WORK AREA.
         SPACE 1
ANS      DS    A                   ANSWER PLACE.
ECB      DC    A(0)                COMMAND PROCESSOR ECB.
PCL      IKJPARM DSECT=PDL         PARSE PCL CSECT.
PDLLM    IKJIDENT 'Load Module',FIRST=ALPHA,OTHER=ALPHANUM,            +
               PROMPT='Load Module+',MAXLNTH=8,                        +
               HELP=('Name of load module to be listed.')
         IKJENDP
         TITLE '- Mapping DSECTs.'
         PRINT NOGEN
         IKJCPPL                   MAP COMMAND PROCESSOR PARM LIST.
         CVT   DSECT=YES
         END   LISTHEAD
