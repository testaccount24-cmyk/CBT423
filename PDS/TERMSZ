TERMSZ   TITLE 'TERMSZ - COMMAND TO RETURN TERMINAL SIZE INFO.'
*
***********************************************************************
*                                                                     *
*    REMARK -   THIS COMMAND IS A PROGRAMMING EXERCISE, AND WAS       *
*               DERIVED FROM THE TERMSIZE TSO COMMAND.                *
*               (SEE COMMENTS BELOW)                                  *
*                                                                     *
*    TERMSZ -   THE GTSIZE MACRO RETURNS THE NUMBER OF ROWS           *
*               FOR THE ISSUING TERMINAL IN R0.                       *
*               THE GTSIZE MACRO RETURNS THE NUMBER OF COLUMNS        *
*               FOR THE ISSUING TERMINAL IN R1.                       *
*                                                                     *
*               BUT WE DO IT THE HARD WAY, WITHOUT THE GTSIZE         *
*               MACRO.  WE HAVE TO BE APF-AUTHORIZED, AND WE          *
*               GET THE INFO DIRECTLY FROM THE TSB.                   *
*                                                                     *
*               TSB + X'66'  -  NUMBER OF ROWS     (ONE BYTE)         *
*               TSB + X'67'  -  NUMBER OF COLUMNS  (ONE BYTE)         *
*                                                                     *
*               NEVERTHELESS, WE CAN CONVERT THIS SOURCE CODE         *
*               INTO THE EQUIVALENT (NON-AUTHORIZED) GTSIZE-          *
*               BASED CODE.  SEE REMARKS BELOW AT THE GTSIZE          *
*               MACRO CALL, WHICH IS CURRENTLY COMMENTED OUT.         *
*                                                                     *
*               (REENTRANT)                                           *
*                                                                     *
*    ADAPTED FROM JEFF BROIDO'S TERMTYPE PROGRAM AS FOLLOWS:          *
*                                                                     *
*    1. WE TAKE FULLER ADVANTAGE OF THE GTSIZE MACRO INFORMATION.     *
*    2. WE DO NOT REQUIRE A CLIST TO FORMAT THE OUTPUT OF THE         *
*         GTSIZE MACRO. THIS COMMAND FORMATS ITS OWN OUTPUT.          *
*    3. CHANGED NAME TO TERMSZ SO AS NOT TO CONFUSE WITH TERMSIZE.    *
*    4. TSO OUTPUT IS NOW PUTLINE, SO IT CAN BE CAPTURED AND          *
*         DISPLAYED SCROLLABLE.                                       *
*                                                                     *
*           SAMPLE OUTPUT                                             *
*                                                                     *
*    * TERMINAL SIZE DIRECTLY FROM TSB *                              *
*      -------- ---- -------- ---- ---                                *
*    THIS TERMINAL HAS     32  ROWS                                   *
*    THIS TERMINAL HAS     80  COLUMNS                                *
*                                                                     *
***********************************************************************
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
SP000    EQU   0
*
TERMSZ   CSECT
TERMSZ   AMODE 31
TERMSZ   RMODE 24
         YREGS                      NOW IBM HAS DONE IT
         STM   R14,R12,12(R13)      SAVE REGISTERS
         USING TERMSZ,R12
         LR    R12,R15              BASE REGISTER
         L     R0,WORKDL
         GETMAIN RU,LV=WORKDL,SP=SP000,LOC=BELOW
         LR    R9,R1
         USING WORKD,R9
         ST    R9,GOTADDR
         LA    R2,SAVE              NEW SAVE AREA
         ST    R2,8(,R13)           PUT IT AWAY
         ST    R13,SAVE+4           OLD SAVE AREA
         LR    R13,R2               POINT R13 TO NEW SAVE AREA
* ------------------------------------------------------------------- *
*                          GET TERMINAL SIZE
*        GTSIZE
*                        SEE EXPLANATION BELOW
* ------------------------------------------------------------------- *
*        PERFORM THE FUNCTION OF THE GTSIZE MACRO, BUT GET THE        *
*        INFORMATION DIRECTLY FROM THE TSB.  UNFORTUNATELY, THE       *
*        TSB IS IN PROTECTED STORAGE, KEY 6, SP 231. AND WE HAVE      *
*        TO BE APF-AUTHORIZED AND GET INTO KEY 0 TO ACCESS IT.        *
* ------------------------------------------------------------------- *
*        SINCE THE GTSIZE MACRO CALLS AN SVC (94), IT CAN GET         *
*        INTO SUPERVISOR STATE AND DO THE STORAGE FETCH, RETURNING    *
*        TO PROBLEM STATE.  SO THE "GTSIZE" VERSION OF THIS PROGRAM   *
*        DOES NOT HAVE TO BE APF-AUTHORIZED, WHILE THIS PROGRAM HAS   *
*        TO BE APF-AUTHORIZED.                                        *
* ------------------------------------------------------------------- *
*        TO CONVERT THIS PROGRAM TO THE NON-AUTHORIZED FORM, JUST     *
*        UNCOMMENT THE GTSIZE MACRO, AND COMMENT OUT ALL THE LINES    *
*        BELOW, IN-BETWEEN THE ARROW COMMENTS (BELOW AND ABOVE).      *
* ------------------------------------------------------------------- *
*                PERFORM THE GTSIZE MACRO FUNCTIONALITY               *
* ------------------------------------------------------------------- *
* ----------------------------------- >>>>>   BELOW   <<<<< --------- *
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         L     R5,X'224'               POINT TO ASCB
         L     R5,X'3C'(,R5)           POINT TO TSB
         XR    R0,R0                   CLEAR R0 AND R1 AS
         XR    R1,R1                     WORK REGISTERS
         STM   R0,R1,SAVER01           PRESERVE R0 AND R1
         MODESET KEY=ZERO
         LM    R0,R1,SAVER01           RESTORE  R0 AND R1
         CLC   =X'0000',X'66'(R5)      IS THE TERMSIZE BASIC?
         BNE   REALSIZ                 NO. GET THE MODIFIED TERMSIZE
         IC    R0,X'64'(,R5)           YES. GET THE BASIC TERMSIZE
         IC    R1,X'65'(,R5)
         B     BACK01
REALSIZ  IC    R0,X'66'(,R5)           RETRIEVE NUMBER OF ROWS
         IC    R1,X'67'(,R5)           RETRIEVE NUMBER OF COLUMNS
BACK01   STM   R0,R1,SAVER01           PRESERVE R0 AND R1
         MODESET KEY=NZERO
         LM    R0,R1,SAVER01           RESTORE  R0 AND R1
* ----------------------------------- >>>>>   ABOVE   <<<<< --------- *
         ST    R0,ROWS                 STORE NUMBER OF ROWS
         ST    R1,COLS                 STORE NUMBER OF COLUMNS
         LR    R6,R0                   GET NUMBER OF ROWS
         CVD   R6,DWORK                CONVERT TO PACKED
         MVC   MESROWS,LITROWS         MOVE LITERAL PART
         MVC   MESCOLS,LITCOLS           OF MESSAGES
         MVC   NUMROWS,MASK7A          EDIT MASK
         ED    NUMROWS,DWORK+5         DISPLAY NUMBER IN MESSAGE
         MVI   NUMROWS+6,C' '
         MVC   MESROWS+18(7),NUMROWS
         LR    R6,R1                   GET NUMBER OF COLUMNS
         CVD   R6,DWORK                CONVERT TO PACKED
         MVC   NUMCOLS,MASK7A          EDIT MASK
         ED    NUMCOLS,DWORK+5         DISPLAY NUMBER IN MESSAGE
         MVI   NUMCOLS+6,C' '
         MVC   MESCOLS+18(7),NUMCOLS
         APUT  TITLEA,L'TITLEA         PUT OUT THE ENTIRE DISPLAY
         APUT  TITLEU,L'TITLEU
         APUT  MESROWS,L'MESROWS
         APUT  MESCOLS,L'MESCOLS
*
RETURN   DS    0H
         L     R13,SAVE+4           LOAD OLD SAVE AREA
         L     R9,GOTADDR           POINT TO ADDRESS TO FREEMAIN
         FREEMAIN RU,LV=WORKDL,A=(R9),SP=SP000
         DROP  R9
         LM    R14,R12,12(R13)      PUT REGISTERS BACK
         BR    R14                  RETURN TO CALLER
*
NOTAUTH  DS    0H
         APUT  AUTHMSG,L'AUTHMSG
         B     RETURN
TITLEA   DC    C'* TERMINAL SIZE DIRECTLY FROM TSB *'
TITLEU   DC    C'  -------- ---- -------- ---- ---  '
*TITLEA  DC    C'* GTSIZE-BASED TERMINAL DISPLAY *'
*TITLEU  DC    C'  ------------ -------- -------  '
MASK7A   DC    XL7'40202020212020'
LITROWS  DC    C'THIS TERMINAL HAS         ROWS'
LITCOLS  DC    C'THIS TERMINAL HAS         COLUMNS'
AUTHMSG  DC    C'THIS COMMAND MUST BE APF-AUTHORIZED.'
         LTORG
*
WORKD    DSECT
         DS    0D
SAVE     DS    18F                  SAVE AREA
SAVER01  DS    2F
GOTADDR  DS    F
ROWS     DS    F
COLS     DS    F
NUMROWS  DS    CL7
NUMCOLS  DS    CL7
MESROWS  DC    C'THIS TERMINAL HAS         ROWS'
MESCOLS  DC    C'THIS TERMINAL HAS         COLUMNS'
DWORK    DS    D
WORKDL   EQU   *-WORKD
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
