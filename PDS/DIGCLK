   TITLE 'DIGCLK   --   3270 TERMINAL DIGITAL CLOCK'                    00002
* ------------------------------------------------------------------- *
*  CHANGE LOG:                                                      UTC
*                                                                   UTC
*   1.  Insert global assembly adjustments to account for time      UTC
*       zone differences.  (SBG - 12May2013)                        UTC
*                                                                   UTC
* ------------------------------------------------------------------UTC
*                    SET THE TIME ZONE HERE                         UTC
*                    --- --- ---- ---- ----                         UTC
*  As this command is currently coded, you will have to adjust for  UTC
*  the current time zone and re-assemble this command.  The adjust- UTC
*  ments are coded using the settings below....                     UTC
*                                                                   UTC
*  A.  First adjust &PLUSMIN if you are east or west of Greenwich.  UTC
*      Set it to '-' if you are west.                               UTC
*      Set it to '+' if you are east.                               UTC
*                                                                   UTC
*  B.  Then adjust &DISPLHR to tell the program how many hours of   UTC
*      displacement (already set to plus or minus).                 UTC
*                                                                   UTC
*  C.  If your time zone is not an even hour, plus or minus of      UTC
*      Greenwich, then set the appropriate number of minutes to     UTC
*      add, in &ADDMIN.   &ADDMIN will add only, not subtract.      UTC
*      So you may have to adjust &ADDMIN and &DISPLHR together,     UTC
*      to get the actual correct displacement from UTC.             UTC
*                                                                   UTC
* ------------------------------------------------------------------UTC
         LCLC  &PLUSMIN         PLUS OR MINUS FROM UTC.             UTC 01677
         LCLA  &DISPLHR,&ADDMIN     HOURS, MINUTES.                 UTC 01678
*                                                                   UTC
&PLUSMIN SETC  '-'              ('+' FOR PLUS, '-' FOR MINUS)       UTC 01684
&DISPLHR SETA  4                HOW MANY HOURS                      UTC 01683
&ADDMIN  SETA  0                ADD MINUTES - ALWAYS ADD.....       UTC
*                                                                   UTC
*                               (IF PLUSMIN IS NEGATIVE AND         UTC
*                               MINUTES IS NOT ZERO, THEN CONSIDER  UTC
*                               ADDING ONE HOUR TO DISPLHR, TO      UTC
*                               MAKE SURE THE TIME IS CORRECT.      UTC
*                               &ADDMIN MAY HAVE TO BE SET TO       UTC
*                               60 MINUS THE REAL NUMBER OF         UTC
*                               MINUTES IN UTC-HH.MM.)              UTC
* ------------------------------------------------------------------- *
         SPACE 1
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 2025 BY JEFFREY R. BROIDO.  ALL RIGHTS               *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  broidoj@gmail.com                  *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        DIGCLK - DIGITAL CLOCK FOR 327X TERMINALS.  WRITTEN AT       *
*              COLGATE-PALMOLIVE,  MODIFIED AT JOHNSON & JOHNSON.     *
*                                                                     *
*                                  JEFFREY R. BROIDO                  *
*                                                                     *
***********************************************************************
DIGCLK   CSECT
         YREGS
         USING DIGCLK,R15          (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C' DIGCLK - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1979 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)
         LR    R12,R15
         USING DIGCLK,R12
         ST    R12,BSAVE
         LA    R2,SAVE
         ST    R2,8(,R13)
         ST    R13,SAVE+4
         LR    R13,R2
         GTSIZE ,
         LTR   R0,R0               DISPLAY?
         BNZ   OKDISP              B IF YES.
         VTPUT 'This program will only run on a display terminal.'
         B     EXITTTY
OKDISP   SR    R9,R9
         SR    R10,R10
         LA    R1,STAXLIST
         STAX  ATTN,MF=(E,(1))
         SPACE 1
CLKLUP   SR    R6,R6               CLEAR COUNTER
CLKLUP1  STCK  WORK1               STORE CLOCK.
         LM    R2,R3,WORK1         LOAD IT.
         SRDL  R2,12
         D     R2,=F'86400000'
         LR    R5,R2
         SR    R2,R2
         D     R2,=F'1000'
         LR    R3,R2
         M     R2,=F'86400000'
         ALR   R3,R5
         BC    12,NOCARRY
         LA    R2,1(,R2)
NOCARRY  D     R2,=F'10000'        MAKE R3 HUNDREDTHS OF SECONDS.
         SR    R2,R2               CLEAR REMAINDER.
         D     R2,=F'100'          ISOLATE HUNDREDTHS.
         CH    R2,=H'10'           LESS THAN TENTH AWAY?
         BH    OLDCK               B IF NO.
         LTR   R10,R10
         BZ    SLEEP1
         CR    R10,R3               STILL SAME TIME?
         BE    SLEEP1
         B     SECTEST
OLDCK    LTR   R9,R9               OLD TIME INVALID?
         BZ    SLEEP0              B IF YES.
         CR    R9,R3               OLD TIME EQUAL?
         BE    SLEEP1              B IF YES.
         LR    R3,R9
         B     SECTEST
SLEEP0   LR    R9,R3
         SR    R10,R10
SLEEP1   STIMER  WAIT,BINTVL=INTRVL   SLEEP.
         TM    FLAG,ENDFLG         END AT HAND?
         BO    EXIT                YUP.
         LA    R6,1(,R6)           BUMP COUNT.
         B     CLKLUP1             DO IT AGAIN.
SECTEST  SR    R2,R2               CLEAR REMAINDER
         D     R2,=F'60'           ISOLATE SECONDS.
         MVI   CLK02,C'-'          DEFAULT TO DASH (SEC EVEN).
         EX    R2,REGTEST          SECONDS EVEN?
         BZ    SECEV               B IF YES.
         MVI   CLK02,X'6D'         MOVE UNDERLINE (SEC ODD).
SECEV    CVD   R2,WORK1            DECIMALIZE SECS.
         ZAP   DECCLK,WORK1+6(2)   MOVE SECS.
         SR    R2,R2               CLEAR REMAINDER.
         D     R2,=F'60'           ISOLATE MINUTES.
* -------------------------------------------------------------- *  UTC
*     Add minutes to UTC correction. ADD ONLY!!!! If &PLUSMIN is *  UTC
*     negative, then adjust &DISPLHR up by one, and the &ADDMIN  *  UTC
*     to the 60's complement.                                    *  UTC
* -------------------------------------------------------------- *  UTC
         A     R2,=F'&ADDMIN'      ADD UTC DISPLACEMENT IN MINUTES  UTC
         C     R2,=F'60'           LESS THAN 60 MINUTES             UTC
         BL    NOADDHR             FINE. NO CHANGE.                 UTC
         S     R2,=F'60'           SUBTRACT 60 MINUTES              UTC
         LA    R3,1(,R3)           ADD 1 HOUR                       UTC
NOADDHR  DS    0H                                                   UTC
         CVD   R2,WORK1            DEC. MINUTES.
         SRP   WORK1+5(3),2,0      SHIFT MINUTES LEFT.
         AP    DECCLK+1(3),WORK1+5(3) ADD MINUTES.
* --------------------------------------------------------------- * UTC
*   To change UTC hours correction, insert code here:       below * UTC
* --------------------------------------------------------------- * UTC
SETUTC   DS    0H                  Set hours difference from UTC    UTC
         AIF   ('&PLUSMIN' EQ '+').SETPLUS                          UTC
         AIF   ('&PLUSMIN' EQ '-').SETMINUS                         UTC
         AGO   .SETMINUS           Default is minus.                UTC
.SETMINUS ANOP                                                      UTC
         S     R3,=F'&DISPLHR'     UTC - n HOURS  (CHANGE)          UTC
         BNM   SETMNNG             LESS THAN 0 ?                    UTC
         A     R3,=F'24'           YES. ADD 24 HOURS.               UTC
SETMNNG  DS    0H                                                   UTC
         AGO   .DONESET                                             UTC
.SETPLUS ANOP                                                       UTC
         LA    R4,&DISPLHR         LOAD REG WITH HOURS DISPLACEMENT UTC
         LA    R3,0(R4,R3)         UTC + n HOURS  (CHANGE)          UTC
.DONESET ANOP                                                       UTC
* --------------------------------------------------------------- * UTC
*   To change UTC hours correction, insert code here:       above * UTC
* --------------------------------------------------------------- * UTC
         CH    R3,=H'24'           CORRECTED TIME PAST MIDNIGHT?
         BL    NOTMID              B IF NOT.
         SH    R3,=H'24'           CORRECT FOR NEXT DAY.
NOTMID   CVD   R3,WORK1            DEC HOURS.
         SRP   WORK1+4(4),4,0      SHIFT HOURS LEFT.
         AP    DECCLK,WORK1+4(4)   ADD HOURS.
         SRP   DECCLK,1,0          SHIFT LEFT ONE.
         MVC   CLK01,CLKPAT1       MOVE PATTERN.
         ED    CLK01,DECCLK        EDIT TIME.
         CVD   R6,WORK1            DECIMALIZE COUNT FOR POSSIBLE DISP.
         C     R6,=F'6'            IS COUNT OVER 6?
         BL    CKLOW               B IF NOT.
         L     R1,INTRVL           OVER 6.  TOO MANY POPS. BUMP UP ...
         LA    R1,1(,R1)           ... THE INTERVAL BY 1/100 SEC.
         ST    R1,INTRVL           SAVE NEW INTERVAL.
         B     CNTOK               CONTINUE.
CKLOW    C     R6,=F'2'            COUNT UNDER 2?
         BH    CNTOK               B IF NOT.
         L     R1,INTRVL           UNDER 2.  TO FEW POPS.  SHAVE ...
         BCTR  R1,*-*              ... INTERVAL BY 1/100 SEC.
         ST    R1,INTRVL           SAVE NEW INTERVAL.
CNTOK    TM    FLAG,CNTFLG
         BZ    FPUT
         UNPK  CTOUT,WORK1+5(3)
         OI    CTOUT+4,X'F0'
         L     R6,INTRVL
         CVD   R6,WORK1
         UNPK  INTOUT,WORK1+6(2)
         OI    INTOUT+2,X'F0'
FPUT     TPUT  CLK00,LCLK00,FULLSCR
         LR    R10,R9
         SR    R9,R9
         TM    FLAG,ENDFLG             END AT HAND?
         BO    EXIT                    B IF YES
         TM    FLAG,QFLG               QUERY END FLAG SET?
         BZ    CLKLUP                  B IF NOT.
         LH    R1,QCNT                 LOAD COUNT.
         LA    R1,1(,R1)               BUMP IT.
         STH   R1,QCNT                 RESTORE IT.
         CH    R1,=H'2'                OVER 2?
         BNH   CLKLUP                  B IF NOT.
         NI    FLAG,X'FF'-QFLG         OFF QFLG.
         B     CLKLUP
         SPACE 1
EXIT     K
         STIMER WAIT,BINTVL=HALF
         VTPUT 'Bye!'
EXITTTY  L     R13,SAVE+4
         LM    R14,R12,12(R13)
         BR    R14
         SPACE 1
         USING *,R15
ATTN     L     R12,BSAVE
         LR    R5,R14
         DROP  R15
         TM    FLAG,QFLG               QUERY END FLAG ON?
         BZ    ATTN1                   B IF NOT
         OI    FLAG,ENDFLG             ON FINAL END FLAG.
         BR    R5                      RETURN
ATTN1    XC    QCNT,QCNT               CLEAR END INTERVAL COUNT
         XI    FLAG,CNTFLG             FLIP-FLOP INTERNAL INFO FLG.
         OI    FLAG,QFLG               ON QUERY END FLAG.
         MVI   CTOUT,C' '
         MVC   CTOUT+1(9),CTOUT
         K
         STIMER WAIT,BINTVL=HALF
         VTPUT 'Hit ENTER to continue, or type E to end.'
         TGET  IN,1
         OI    IN,C' '
         CLI   IN,C'E'
         BNER  R5                  RETURN IF NOT END
         OI    FLAG,ENDFLG
         BR    R5                  RETURN
         SPACE 1
BSAVE    DS    F
SAVE     DS    9D
WORK1    DS    D
WORK     DS    F
DECCLK   DS    PL4
FLAG     DC    X'00'
CNTFLG   EQU   B'10000000'
ENDFLG   EQU   B'01000000'
QFLG     EQU   B'00100000'
QCNT     DS    H
STAXLIST STAX  ATTN,MF=L
INTRVL   DC    F'33'
HALF     DC    F'50'
CLK00    DC    X'F11140C13C404000114ED11D60'
CLK01    DS    CL9
         DC    X'1DE8'
CLK02    DS    C
         DC    X'1140401DE8'
CTOUT    DS    CL5
         DC    CL2' '
INTOUT   DS    CL3
         DC    X'11404013'
LCLK00   EQU   *-CLK00
CLKPAT1  DC    X'4021207A20207A2020'
REGTEST  TM    EVODD,*-*
EVODD    DC    X'01'
IN       DS    C
         END
